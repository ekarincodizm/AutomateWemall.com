<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20160512 12:32:23.803" generator="Robot 3.0 (Python 2.7.10 on darwin)">
<suite source="/Users/Benz/Documents/Ascend Work/robot_itruemart_thai/Test_Case/PCMS_Order/item_status_failed_delivery.robot" id="s1" name="Item Status Failed Delivery">
<test id="s1-t1" name="TC_016_[1-item][Normal product] To verify that system can receive Failed delivery status from FMS in shipped status and return success without doing any action.">
<kw name="Guest Buy Product Success with COD" library="Create_order">
<arguments>
<arg>${email}</arg>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Robot_Name</arg>
</arguments>
<assign>
<var>${Text_Name}</var>
</assign>
<msg timestamp="20160512 12:32:25.237" level="INFO">${Text_Name} = Robot_Name</msg>
<status status="PASS" endtime="20160512 12:32:25.237" starttime="20160512 12:32:25.237"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0900000000</arg>
</arguments>
<assign>
<var>${Text_Phone}</var>
</assign>
<msg timestamp="20160512 12:32:25.238" level="INFO">${Text_Phone} = 0900000000</msg>
<status status="PASS" endtime="20160512 12:32:25.238" starttime="20160512 12:32:25.238"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Robot_Address</arg>
</arguments>
<assign>
<var>${Text_Address}</var>
</assign>
<msg timestamp="20160512 12:32:25.240" level="INFO">${Text_Address} = Robot_Address</msg>
<status status="PASS" endtime="20160512 12:32:25.240" starttime="20160512 12:32:25.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'random' == '${inventory_id}'</arg>
<arg>Get One Inventory ID</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${inv_id}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:25.265" starttime="20160512 12:32:25.265"></status>
</kw>
<msg timestamp="20160512 12:32:25.266" level="INFO">${inv_id} = LOAAB1111111</msg>
<status status="PASS" endtime="20160512 12:32:25.266" starttime="20160512 12:32:25.242"></status>
</kw>
<kw name="Adjust stock by inventory_id" library="update_stock">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<assign>
<var>${stock-data}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:32:25.272" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:32:25.272" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:32:25.272" starttime="20160512 12:32:25.271"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:32:25.273" starttime="20160512 12:32:25.273"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:26.387" starttime="20160512 12:32:25.275"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:26.388" starttime="20160512 12:32:26.387"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:32:26.389" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"LOAAB1111111":197},"diff":{"LOAAB1111111":197},"stock":{"LOAAB1111111":233},"hold":{"LOAAB1111111":36}}}</msg>
<status status="PASS" endtime="20160512 12:32:26.389" starttime="20160512 12:32:26.388"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:32:26.390" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:32:26.390" starttime="20160512 12:32:26.389"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:32:26.391" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:32:26.391" starttime="20160512 12:32:26.391"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:32:26.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:32:26.392" starttime="20160512 12:32:26.392"></status>
</kw>
<msg timestamp="20160512 12:32:26.392" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"LOAAB1111111":197},"diff":{"LOAAB1111111":197},"stock":{"LOAAB1111111":233},"hold":{"LOAAB1111111":36}}}</msg>
<status status="PASS" endtime="20160512 12:32:26.392" starttime="20160512 12:32:25.270"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:32:26.393" level="INFO">${data} = {"diff": {"LOAAB1111111": 197}, "hold": {"LOAAB1111111": 36}, "remaining": {"LOAAB1111111": 197}, "stock": {"LOAAB1111111": 233}}</msg>
<status status="PASS" endtime="20160512 12:32:26.393" starttime="20160512 12:32:26.393"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:32:26.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:32:26.394" starttime="20160512 12:32:26.394"></status>
</kw>
<msg timestamp="20160512 12:32:26.394" level="INFO">${stock-data} = {"diff": {"LOAAB1111111": 197}, "hold": {"LOAAB1111111": 36}, "remaining": {"LOAAB1111111": 197}, "stock": {"LOAAB1111111": 233}}</msg>
<status status="PASS" endtime="20160512 12:32:26.394" starttime="20160512 12:32:25.269"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock-data}</arg>
<arg>/remaining/${inv_id}</arg>
</arguments>
<assign>
<var>${remain}</var>
</assign>
<msg timestamp="20160512 12:32:26.396" level="INFO">${remain} = 197</msg>
<status status="PASS" endtime="20160512 12:32:26.396" starttime="20160512 12:32:26.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${remain}' &lt; '1'</arg>
<arg>Adjust Out of Stock By Inventory ID</arg>
<arg>${inv_id}</arg>
<arg>${stock-data}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:26.415" starttime="20160512 12:32:26.396"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:26.415" starttime="20160512 12:32:25.266"></status>
</kw>
<kw name="Get Product Pkey" library="product">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<assign>
<var>${product_pkey}</var>
</assign>
<msg timestamp="20160512 12:32:26.643" level="INFO">${product_pkey} = 2346823081909</msg>
<status status="PASS" endtime="20160512 12:32:26.643" starttime="20160512 12:32:26.416"></status>
</kw>
<kw name="Login Pcms" library="keywords_login">
<kw name="Open Browser" library="Selenium2Library">
<doc>Opens a new browser instance to given URL.</doc>
<arguments>
<arg>${PCMS_URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20160512 12:32:26.647" level="INFO">Opening browser 'Google Chrome' to base url 'http://thor-pcms.itruemart-dev.com:81'</msg>
<status status="PASS" endtime="20160512 12:32:30.556" starttime="20160512 12:32:26.647"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${xpath-login-email}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:30.599" starttime="20160512 12:32:30.559"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${xpath-login-email}</arg>
<arg>${Text_Email}</arg>
</arguments>
<msg timestamp="20160512 12:32:30.601" level="INFO">Typing text 'admin@domain.com' into text field 'name=email'</msg>
<status status="PASS" endtime="20160512 12:32:30.700" starttime="20160512 12:32:30.600"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${xpath-login-password}</arg>
<arg>${Text_Password}</arg>
</arguments>
<msg timestamp="20160512 12:32:30.701" level="INFO">Typing text '12345' into text field 'name=password'</msg>
<status status="PASS" endtime="20160512 12:32:30.822" starttime="20160512 12:32:30.701"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${xpath-login-button}</arg>
</arguments>
<msg timestamp="20160512 12:32:30.824" level="INFO">Clicking element '//input[@class="btn btn-success mws-login-button"]'.</msg>
<status status="PASS" endtime="20160512 12:32:30.881" starttime="20160512 12:32:30.823"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${xpath-link-logout}</arg>
<arg>30s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:32.866" starttime="20160512 12:32:30.883"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:32.867" starttime="20160512 12:32:26.645"></status>
</kw>
<kw name="SET ALLOW COD" library="Keywords_Product">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<kw name="GO TO PRODUCT SET SHIPPING" library="Keywords_Product">
<kw name="Go To" library="Selenium2Library">
<doc>Navigates the active browser instance to the provided URL.</doc>
<arguments>
<arg>${PCMS_URL}/products/set-shipping</arg>
</arguments>
<msg timestamp="20160512 12:32:32.870" level="INFO">Opening url 'http://thor-pcms.itruemart-dev.com:81/products/set-shipping'</msg>
<status status="PASS" endtime="20160512 12:32:34.070" starttime="20160512 12:32:32.870"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:34.070" starttime="20160512 12:32:32.869"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>id=product</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:34.090" starttime="20160512 12:32:34.072"></status>
</kw>
<kw name="Get Product Name" library="product">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<assign>
<var>${product_name}</var>
</assign>
<msg timestamp="20160512 12:32:34.305" level="INFO">${product_name} = เมาส์พร้อมคีย์บอร์ด Logitech Wireless mouse MK240</msg>
<status status="PASS" endtime="20160512 12:32:34.305" starttime="20160512 12:32:34.091"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>id=product</arg>
<arg>${product_name}</arg>
</arguments>
<msg timestamp="20160512 12:32:34.308" level="INFO">Typing text 'เมาส์พร้อมคีย์บอร์ด Logitech Wireless mouse MK240' into text field 'id=product'</msg>
<status status="PASS" endtime="20160512 12:32:34.519" starttime="20160512 12:32:34.307"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${xpath-search-button}</arg>
</arguments>
<msg timestamp="20160512 12:32:34.520" level="INFO">Clicking element 'xpath=//input[@value="Search"]'.</msg>
<status status="PASS" endtime="20160512 12:32:34.644" starttime="20160512 12:32:34.520"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${xpath-set-shipping-first-edit-button}</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:35.659" starttime="20160512 12:32:34.645"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${xpath-set-shipping-first-edit-button}</arg>
</arguments>
<msg timestamp="20160512 12:32:35.661" level="INFO">Clicking element 'xpath=//a[contains(@href, "/products/set-shipping/edit")][1]'.</msg>
<status status="PASS" endtime="20160512 12:32:35.743" starttime="20160512 12:32:35.661"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>name=allow_cod</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:36.844" starttime="20160512 12:32:35.745"></status>
</kw>
<kw name="Select Checkbox" library="Selenium2Library">
<doc>Selects checkbox identified by `locator`.</doc>
<arguments>
<arg>name=allow_cod</arg>
</arguments>
<msg timestamp="20160512 12:32:36.845" level="INFO">Selecting checkbox 'name=allow_cod'.</msg>
<status status="PASS" endtime="20160512 12:32:36.906" starttime="20160512 12:32:36.845"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${xpath-save-button}</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:36.932" starttime="20160512 12:32:36.907"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${xpath-save-button}</arg>
</arguments>
<msg timestamp="20160512 12:32:36.933" level="INFO">Clicking element 'xpath=//input[@value="Save"]'.</msg>
<status status="PASS" endtime="20160512 12:32:36.998" starttime="20160512 12:32:36.932"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:36.999" starttime="20160512 12:32:32.867"></status>
</kw>
<kw name="Open Browser" library="Selenium2Library">
<doc>Opens a new browser instance to given URL.</doc>
<arguments>
<arg>${ITM_URL}/products/item-${product_pkey}.html</arg>
<arg>chrome</arg>
</arguments>
<msg timestamp="20160512 12:32:37.000" level="INFO">Opening browser 'chrome' to base url 'http://thor-www.itruemart-dev.com/products/item-2346823081909.html'</msg>
<status status="PASS" endtime="20160512 12:32:46.445" starttime="20160512 12:32:37.000"></status>
</kw>
<kw name="Maximize Browser Window" library="Selenium2Library">
<doc>Maximizes current browser window.</doc>
<status status="PASS" endtime="20160512 12:32:46.956" starttime="20160512 12:32:46.450"></status>
</kw>
<kw name="Level D Choose Product Color" library="keywords_leveld">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//ul[@data-style-name="color"]</arg>
</arguments>
<assign>
<var>${color}</var>
</assign>
<msg timestamp="20160512 12:32:46.960" level="INFO">${color} = //ul[@data-style-name="color"]</msg>
<status status="PASS" endtime="20160512 12:32:46.960" starttime="20160512 12:32:46.959"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>${color}</arg>
</arguments>
<assign>
<var>${have_color}</var>
</assign>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${color}</arg>
</arguments>
<msg timestamp="20160512 12:32:46.963" level="INFO">Verifying element '//ul[@data-style-name="color"]' is visible.</msg>
<status status="PASS" endtime="20160512 12:32:46.999" starttime="20160512 12:32:46.962"></status>
</kw>
<msg timestamp="20160512 12:32:46.999" level="INFO">${have_color} = True</msg>
<status status="PASS" endtime="20160512 12:32:46.999" starttime="20160512 12:32:46.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${have_color}</arg>
<arg>Level D Choose Product Color Item</arg>
</arguments>
<kw name="Level D Choose Product Color Item" library="keywords_leveld">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//div[@class="box_status active box-status-has-stock"]</arg>
</arguments>
<assign>
<var>${div_stock_active}</var>
</assign>
<msg timestamp="20160512 12:32:47.003" level="INFO">${div_stock_active} = //div[@class="box_status active box-status-has-stock"]</msg>
<status status="PASS" endtime="20160512 12:32:47.003" starttime="20160512 12:32:47.003"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//div[@class="box_status inc_active box-status-no-stock"]</arg>
</arguments>
<assign>
<var>${div_stock_inactive}</var>
</assign>
<msg timestamp="20160512 12:32:47.004" level="INFO">${div_stock_inactive} = //div[@class="box_status inc_active box-status-no-stock"]</msg>
<status status="PASS" endtime="20160512 12:32:47.004" starttime="20160512 12:32:47.004"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//ul[@data-style-name="color"]/li[${color_no}]/a</arg>
</arguments>
<assign>
<var>${color}</var>
</assign>
<msg timestamp="20160512 12:32:47.005" level="INFO">${color} = //ul[@data-style-name="color"]/li[1]/a</msg>
<status status="PASS" endtime="20160512 12:32:47.005" starttime="20160512 12:32:47.005"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>${color}</arg>
</arguments>
<assign>
<var>${have_color}</var>
</assign>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${color}</arg>
</arguments>
<msg timestamp="20160512 12:32:47.007" level="INFO">Verifying element '//ul[@data-style-name="color"]/li[1]/a' is visible.</msg>
<status status="PASS" endtime="20160512 12:32:47.039" starttime="20160512 12:32:47.007"></status>
</kw>
<msg timestamp="20160512 12:32:47.040" level="INFO">${have_color} = True</msg>
<status status="PASS" endtime="20160512 12:32:47.040" starttime="20160512 12:32:47.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${have_color}</arg>
<arg>Click Element</arg>
<arg>${color}</arg>
</arguments>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${color}</arg>
</arguments>
<msg timestamp="20160512 12:32:47.042" level="INFO">Clicking element '//ul[@data-style-name="color"]/li[1]/a'.</msg>
<status status="PASS" endtime="20160512 12:32:47.108" starttime="20160512 12:32:47.042"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:47.109" starttime="20160512 12:32:47.041"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20160512 12:32:50.111" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20160512 12:32:50.111" starttime="20160512 12:32:47.110"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>${div_stock_inactive}</arg>
</arguments>
<assign>
<var>${have_stock}</var>
</assign>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${div_stock_inactive}</arg>
</arguments>
<msg timestamp="20160512 12:32:50.113" level="INFO">Verifying element '//div[@class="box_status inc_active box-status-no-stock"]' is visible.</msg>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20160512 12:32:50.402" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20160512 12:32:50.402" starttime="20160512 12:32:50.145"></status>
</kw>
<msg timestamp="20160512 12:32:50.405" level="FAIL">The element '//div[@class="box_status inc_active box-status-no-stock"]' should be visible, but it is not.</msg>
<status status="FAIL" endtime="20160512 12:32:50.405" starttime="20160512 12:32:50.113"></status>
</kw>
<msg timestamp="20160512 12:32:50.405" level="INFO">${have_stock} = False</msg>
<status status="PASS" endtime="20160512 12:32:50.405" starttime="20160512 12:32:50.112"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${color_no} + 1</arg>
</arguments>
<assign>
<var>${color_no}</var>
</assign>
<msg timestamp="20160512 12:32:50.434" level="INFO">${color_no} = 2</msg>
<status status="PASS" endtime="20160512 12:32:50.434" starttime="20160512 12:32:50.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${have_stock}</arg>
<arg>Level D Choose Product Color Item</arg>
<arg>${color_no}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:50.436" starttime="20160512 12:32:50.436"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:50.436" starttime="20160512 12:32:47.002"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:50.436" starttime="20160512 12:32:47.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20160512 12:32:55.438" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20160512 12:32:55.438" starttime="20160512 12:32:50.437"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:55.439" starttime="20160512 12:32:46.958"></status>
</kw>
<kw name="Level D Click Add To Cart success case" library="keywords_leveld">
<kw name="Wait Until Element is ready and click" library="Keywords_Common">
<arguments>
<arg>${LvD_Add_to_Cart}</arg>
<arg>60</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:55.449" starttime="20160512 12:32:55.444"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:55.470" starttime="20160512 12:32:55.450"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="Selenium2Library">
<doc>Waits until element specified with `locator` is enabled.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:55.483" starttime="20160512 12:32:55.471"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<msg timestamp="20160512 12:32:55.485" level="INFO">Clicking element 'jquery=.prd_price_box .btn_order.product-addtocart'.</msg>
<status status="PASS" endtime="20160512 12:32:55.524" starttime="20160512 12:32:55.485"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:55.524" starttime="20160512 12:32:55.442"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${LvD_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:57.332" starttime="20160512 12:32:55.525"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>${CartLightBox_Qualtity}</arg>
</arguments>
<assign>
<var>${is_cart_appreae}</var>
</assign>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${CartLightBox_Qualtity}</arg>
</arguments>
<msg timestamp="20160512 12:32:57.335" level="INFO">Verifying element '//*[@id='cartlightbox-item-quantity']' is visible.</msg>
<status status="PASS" endtime="20160512 12:32:57.370" starttime="20160512 12:32:57.334"></status>
</kw>
<msg timestamp="20160512 12:32:57.370" level="INFO">${is_cart_appreae} = True</msg>
<status status="PASS" endtime="20160512 12:32:57.370" starttime="20160512 12:32:57.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${is_cart_appreae}'!='True'</arg>
<arg>Wait Until Element is ready and click</arg>
<arg>${LvD_Add_to_Cart}</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:32:57.394" starttime="20160512 12:32:57.371"></status>
</kw>
<status status="PASS" endtime="20160512 12:32:57.394" starttime="20160512 12:32:55.440"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20160512 12:33:02.397" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20160512 12:33:02.398" starttime="20160512 12:32:57.395"></status>
</kw>
<kw name="Next to Checkout 1" library="Keywords_CartLightBox">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${CartLightBox_NextBtn}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:02.431" starttime="20160512 12:33:02.401"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${CartLightBox_NextBtn}</arg>
</arguments>
<msg timestamp="20160512 12:33:02.432" level="INFO">Clicking element '//*[@id="cartlightbox-go-next"]'.</msg>
<status status="PASS" endtime="20160512 12:33:02.482" starttime="20160512 12:33:02.432"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20160512 12:33:12.486" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20160512 12:33:12.487" starttime="20160512 12:33:02.483"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:12.512" starttime="20160512 12:33:12.488"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:12.512" starttime="20160512 12:33:02.399"></status>
</kw>
<kw name="Guest Fill Data and Submit Checkout1" library="ITM">
<arguments>
<arg>${Text_Email}</arg>
</arguments>
<kw name="Checkout1 - Input Email" library="Keywords_Checkout1">
<arguments>
<arg>${Text_Email}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout1_InputEmail}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:12.547" starttime="20160512 12:33:12.515"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${Checkout1_InputEmail}</arg>
<arg>${Text_Email}</arg>
</arguments>
<msg timestamp="20160512 12:33:12.549" level="INFO">Typing text 'guest@email.com' into text field '//*[@id="step1-username"]'</msg>
<status status="PASS" endtime="20160512 12:33:12.664" starttime="20160512 12:33:12.548"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:12.664" starttime="20160512 12:33:12.514"></status>
</kw>
<kw name="Checkout1 - Click Next" library="Keywords_Checkout1">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout1_NextBtn}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:12.735" starttime="20160512 12:33:12.666"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout1_NextBtn}</arg>
</arguments>
<msg timestamp="20160512 12:33:12.737" level="INFO">Clicking element '//*[@id="btnNext"]'.</msg>
<status status="PASS" endtime="20160512 12:33:12.791" starttime="20160512 12:33:12.736"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:12.792" starttime="20160512 12:33:12.665"></status>
</kw>
<kw name="Checkout1 - Wait Loading" library="Keywords_Checkout1">
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout1_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20160512 12:33:15.516" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20160512 12:33:15.516" starttime="20160512 12:33:15.354"></status>
</kw>
<msg timestamp="20160512 12:33:15.523" level="FAIL">StaleElementReferenceException: Message: stale element reference: element is not attached to the page document
  (Session info: chrome=50.0.2661.94)
  (Driver info: chromedriver=2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef961),platform=Mac OS X 10.11.4 x86_64)
</msg>
<status status="FAIL" endtime="20160512 12:33:15.524" starttime="20160512 12:33:12.794"></status>
</kw>
<status status="FAIL" endtime="20160512 12:33:15.524" starttime="20160512 12:33:12.792"></status>
</kw>
<status status="FAIL" endtime="20160512 12:33:15.524" starttime="20160512 12:33:12.513"></status>
</kw>
<status status="FAIL" endtime="20160512 12:33:15.524" starttime="20160512 12:32:25.235"></status>
</kw>
<kw type="teardown" name="Close All Browsers" library="Selenium2Library">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" endtime="20160512 12:33:15.683" starttime="20160512 12:33:15.525"></status>
</kw>
<tags>
<tag>Testing2</tag>
</tags>
<status status="FAIL" endtime="20160512 12:33:15.683" critical="yes" starttime="20160512 12:32:25.233">StaleElementReferenceException: Message: stale element reference: element is not attached to the page document
  (Session info: chrome=50.0.2661.94)
  (Driver info: chromedriver=2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef961),platform=Mac OS X 10.11.4 x86_64)
</status>
</test>
<test id="s1-t2" name="TC_017_[1-item][Normal product] To verify that system can receive 'Failed delivery' status from FMS in 'cancel pending' status. And system return success and do the cancel flow.">
<kw name="Guest Buy Product Success with COD" library="Create_order">
<arguments>
<arg>${email}</arg>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${order_id}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Robot_Name</arg>
</arguments>
<assign>
<var>${Text_Name}</var>
</assign>
<msg timestamp="20160512 12:33:15.696" level="INFO">${Text_Name} = Robot_Name</msg>
<status status="PASS" endtime="20160512 12:33:15.696" starttime="20160512 12:33:15.695"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0900000000</arg>
</arguments>
<assign>
<var>${Text_Phone}</var>
</assign>
<msg timestamp="20160512 12:33:15.697" level="INFO">${Text_Phone} = 0900000000</msg>
<status status="PASS" endtime="20160512 12:33:15.698" starttime="20160512 12:33:15.697"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Robot_Address</arg>
</arguments>
<assign>
<var>${Text_Address}</var>
</assign>
<msg timestamp="20160512 12:33:15.700" level="INFO">${Text_Address} = Robot_Address</msg>
<status status="PASS" endtime="20160512 12:33:15.700" starttime="20160512 12:33:15.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'random' == '${inventory_id}'</arg>
<arg>Get One Inventory ID</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${inv_id}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:15.745" starttime="20160512 12:33:15.745"></status>
</kw>
<msg timestamp="20160512 12:33:15.745" level="INFO">${inv_id} = LOAAB1111111</msg>
<status status="PASS" endtime="20160512 12:33:15.745" starttime="20160512 12:33:15.701"></status>
</kw>
<kw name="Adjust stock by inventory_id" library="update_stock">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<assign>
<var>${stock-data}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:33:15.752" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:33:15.752" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:33:15.753" starttime="20160512 12:33:15.752"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:33:15.754" starttime="20160512 12:33:15.753"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:16.358" starttime="20160512 12:33:15.755"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:16.359" starttime="20160512 12:33:16.359"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:33:16.360" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"LOAAB1111111":197},"diff":{"LOAAB1111111":197},"stock":{"LOAAB1111111":233},"hold":{"LOAAB1111111":36}}}</msg>
<status status="PASS" endtime="20160512 12:33:16.360" starttime="20160512 12:33:16.360"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:33:16.362" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:33:16.362" starttime="20160512 12:33:16.361"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:33:16.363" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:33:16.363" starttime="20160512 12:33:16.363"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:33:16.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:33:16.364" starttime="20160512 12:33:16.364"></status>
</kw>
<msg timestamp="20160512 12:33:16.365" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"LOAAB1111111":197},"diff":{"LOAAB1111111":197},"stock":{"LOAAB1111111":233},"hold":{"LOAAB1111111":36}}}</msg>
<status status="PASS" endtime="20160512 12:33:16.365" starttime="20160512 12:33:15.750"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:33:16.366" level="INFO">${data} = {"diff": {"LOAAB1111111": 197}, "hold": {"LOAAB1111111": 36}, "remaining": {"LOAAB1111111": 197}, "stock": {"LOAAB1111111": 233}}</msg>
<status status="PASS" endtime="20160512 12:33:16.366" starttime="20160512 12:33:16.365"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:33:16.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:33:16.367" starttime="20160512 12:33:16.366"></status>
</kw>
<msg timestamp="20160512 12:33:16.367" level="INFO">${stock-data} = {"diff": {"LOAAB1111111": 197}, "hold": {"LOAAB1111111": 36}, "remaining": {"LOAAB1111111": 197}, "stock": {"LOAAB1111111": 233}}</msg>
<status status="PASS" endtime="20160512 12:33:16.367" starttime="20160512 12:33:15.748"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock-data}</arg>
<arg>/remaining/${inv_id}</arg>
</arguments>
<assign>
<var>${remain}</var>
</assign>
<msg timestamp="20160512 12:33:16.368" level="INFO">${remain} = 197</msg>
<status status="PASS" endtime="20160512 12:33:16.368" starttime="20160512 12:33:16.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${remain}' &lt; '1'</arg>
<arg>Adjust Out of Stock By Inventory ID</arg>
<arg>${inv_id}</arg>
<arg>${stock-data}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:16.389" starttime="20160512 12:33:16.369"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:16.389" starttime="20160512 12:33:15.747"></status>
</kw>
<kw name="Get Product Pkey" library="product">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<assign>
<var>${product_pkey}</var>
</assign>
<msg timestamp="20160512 12:33:16.604" level="INFO">${product_pkey} = 2346823081909</msg>
<status status="PASS" endtime="20160512 12:33:16.605" starttime="20160512 12:33:16.390"></status>
</kw>
<kw name="Login Pcms" library="keywords_login">
<kw name="Open Browser" library="Selenium2Library">
<doc>Opens a new browser instance to given URL.</doc>
<arguments>
<arg>${PCMS_URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20160512 12:33:16.608" level="INFO">Opening browser 'Google Chrome' to base url 'http://thor-pcms.itruemart-dev.com:81'</msg>
<status status="PASS" endtime="20160512 12:33:20.399" starttime="20160512 12:33:16.607"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${xpath-login-email}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:20.441" starttime="20160512 12:33:20.403"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${xpath-login-email}</arg>
<arg>${Text_Email}</arg>
</arguments>
<msg timestamp="20160512 12:33:20.443" level="INFO">Typing text 'admin@domain.com' into text field 'name=email'</msg>
<status status="PASS" endtime="20160512 12:33:20.539" starttime="20160512 12:33:20.442"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${xpath-login-password}</arg>
<arg>${Text_Password}</arg>
</arguments>
<msg timestamp="20160512 12:33:20.541" level="INFO">Typing text '12345' into text field 'name=password'</msg>
<status status="PASS" endtime="20160512 12:33:20.661" starttime="20160512 12:33:20.540"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${xpath-login-button}</arg>
</arguments>
<msg timestamp="20160512 12:33:20.663" level="INFO">Clicking element '//input[@class="btn btn-success mws-login-button"]'.</msg>
<status status="PASS" endtime="20160512 12:33:20.717" starttime="20160512 12:33:20.663"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${xpath-link-logout}</arg>
<arg>30s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:22.731" starttime="20160512 12:33:20.719"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:22.732" starttime="20160512 12:33:16.606"></status>
</kw>
<kw name="SET ALLOW COD" library="Keywords_Product">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<kw name="GO TO PRODUCT SET SHIPPING" library="Keywords_Product">
<kw name="Go To" library="Selenium2Library">
<doc>Navigates the active browser instance to the provided URL.</doc>
<arguments>
<arg>${PCMS_URL}/products/set-shipping</arg>
</arguments>
<msg timestamp="20160512 12:33:22.735" level="INFO">Opening url 'http://thor-pcms.itruemart-dev.com:81/products/set-shipping'</msg>
<status status="PASS" endtime="20160512 12:33:24.044" starttime="20160512 12:33:22.735"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:24.045" starttime="20160512 12:33:22.734"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>id=product</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:24.064" starttime="20160512 12:33:24.047"></status>
</kw>
<kw name="Get Product Name" library="product">
<arguments>
<arg>${inv_id}</arg>
</arguments>
<assign>
<var>${product_name}</var>
</assign>
<msg timestamp="20160512 12:33:24.273" level="INFO">${product_name} = เมาส์พร้อมคีย์บอร์ด Logitech Wireless mouse MK240</msg>
<status status="PASS" endtime="20160512 12:33:24.274" starttime="20160512 12:33:24.065"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>id=product</arg>
<arg>${product_name}</arg>
</arguments>
<msg timestamp="20160512 12:33:24.276" level="INFO">Typing text 'เมาส์พร้อมคีย์บอร์ด Logitech Wireless mouse MK240' into text field 'id=product'</msg>
<status status="PASS" endtime="20160512 12:33:24.530" starttime="20160512 12:33:24.275"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${xpath-search-button}</arg>
</arguments>
<msg timestamp="20160512 12:33:24.531" level="INFO">Clicking element 'xpath=//input[@value="Search"]'.</msg>
<status status="PASS" endtime="20160512 12:33:24.686" starttime="20160512 12:33:24.531"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${xpath-set-shipping-first-edit-button}</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:25.741" starttime="20160512 12:33:24.687"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${xpath-set-shipping-first-edit-button}</arg>
</arguments>
<msg timestamp="20160512 12:33:25.743" level="INFO">Clicking element 'xpath=//a[contains(@href, "/products/set-shipping/edit")][1]'.</msg>
<status status="PASS" endtime="20160512 12:33:25.824" starttime="20160512 12:33:25.743"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>name=allow_cod</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:26.910" starttime="20160512 12:33:25.825"></status>
</kw>
<kw name="Select Checkbox" library="Selenium2Library">
<doc>Selects checkbox identified by `locator`.</doc>
<arguments>
<arg>name=allow_cod</arg>
</arguments>
<msg timestamp="20160512 12:33:26.911" level="INFO">Selecting checkbox 'name=allow_cod'.</msg>
<status status="PASS" endtime="20160512 12:33:26.930" starttime="20160512 12:33:26.911"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${xpath-save-button}</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:26.948" starttime="20160512 12:33:26.931"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${xpath-save-button}</arg>
</arguments>
<msg timestamp="20160512 12:33:26.949" level="INFO">Clicking element 'xpath=//input[@value="Save"]'.</msg>
<status status="PASS" endtime="20160512 12:33:27.000" starttime="20160512 12:33:26.949"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:27.000" starttime="20160512 12:33:22.732"></status>
</kw>
<kw name="Open Browser" library="Selenium2Library">
<doc>Opens a new browser instance to given URL.</doc>
<arguments>
<arg>${ITM_URL}/products/item-${product_pkey}.html</arg>
<arg>chrome</arg>
</arguments>
<msg timestamp="20160512 12:33:27.001" level="INFO">Opening browser 'chrome' to base url 'http://thor-www.itruemart-dev.com/products/item-2346823081909.html'</msg>
<status status="PASS" endtime="20160512 12:33:34.703" starttime="20160512 12:33:27.001"></status>
</kw>
<kw name="Maximize Browser Window" library="Selenium2Library">
<doc>Maximizes current browser window.</doc>
<status status="PASS" endtime="20160512 12:33:35.174" starttime="20160512 12:33:34.705"></status>
</kw>
<kw name="Level D Choose Product Color" library="keywords_leveld">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//ul[@data-style-name="color"]</arg>
</arguments>
<assign>
<var>${color}</var>
</assign>
<msg timestamp="20160512 12:33:35.179" level="INFO">${color} = //ul[@data-style-name="color"]</msg>
<status status="PASS" endtime="20160512 12:33:35.179" starttime="20160512 12:33:35.178"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>${color}</arg>
</arguments>
<assign>
<var>${have_color}</var>
</assign>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${color}</arg>
</arguments>
<msg timestamp="20160512 12:33:35.181" level="INFO">Verifying element '//ul[@data-style-name="color"]' is visible.</msg>
<status status="PASS" endtime="20160512 12:33:35.217" starttime="20160512 12:33:35.180"></status>
</kw>
<msg timestamp="20160512 12:33:35.217" level="INFO">${have_color} = True</msg>
<status status="PASS" endtime="20160512 12:33:35.217" starttime="20160512 12:33:35.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${have_color}</arg>
<arg>Level D Choose Product Color Item</arg>
</arguments>
<kw name="Level D Choose Product Color Item" library="keywords_leveld">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//div[@class="box_status active box-status-has-stock"]</arg>
</arguments>
<assign>
<var>${div_stock_active}</var>
</assign>
<msg timestamp="20160512 12:33:35.221" level="INFO">${div_stock_active} = //div[@class="box_status active box-status-has-stock"]</msg>
<status status="PASS" endtime="20160512 12:33:35.221" starttime="20160512 12:33:35.220"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//div[@class="box_status inc_active box-status-no-stock"]</arg>
</arguments>
<assign>
<var>${div_stock_inactive}</var>
</assign>
<msg timestamp="20160512 12:33:35.222" level="INFO">${div_stock_inactive} = //div[@class="box_status inc_active box-status-no-stock"]</msg>
<status status="PASS" endtime="20160512 12:33:35.222" starttime="20160512 12:33:35.222"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//ul[@data-style-name="color"]/li[${color_no}]/a</arg>
</arguments>
<assign>
<var>${color}</var>
</assign>
<msg timestamp="20160512 12:33:35.223" level="INFO">${color} = //ul[@data-style-name="color"]/li[1]/a</msg>
<status status="PASS" endtime="20160512 12:33:35.223" starttime="20160512 12:33:35.222"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>${color}</arg>
</arguments>
<assign>
<var>${have_color}</var>
</assign>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${color}</arg>
</arguments>
<msg timestamp="20160512 12:33:35.225" level="INFO">Verifying element '//ul[@data-style-name="color"]/li[1]/a' is visible.</msg>
<status status="PASS" endtime="20160512 12:33:35.257" starttime="20160512 12:33:35.224"></status>
</kw>
<msg timestamp="20160512 12:33:35.257" level="INFO">${have_color} = True</msg>
<status status="PASS" endtime="20160512 12:33:35.257" starttime="20160512 12:33:35.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${have_color}</arg>
<arg>Click Element</arg>
<arg>${color}</arg>
</arguments>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${color}</arg>
</arguments>
<msg timestamp="20160512 12:33:35.259" level="INFO">Clicking element '//ul[@data-style-name="color"]/li[1]/a'.</msg>
<status status="PASS" endtime="20160512 12:33:35.322" starttime="20160512 12:33:35.259"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:35.322" starttime="20160512 12:33:35.258"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20160512 12:33:38.324" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20160512 12:33:38.324" starttime="20160512 12:33:35.323"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>${div_stock_inactive}</arg>
</arguments>
<assign>
<var>${have_stock}</var>
</assign>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${div_stock_inactive}</arg>
</arguments>
<msg timestamp="20160512 12:33:38.327" level="INFO">Verifying element '//div[@class="box_status inc_active box-status-no-stock"]' is visible.</msg>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20160512 12:33:38.588" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20160512 12:33:38.588" starttime="20160512 12:33:38.357"></status>
</kw>
<msg timestamp="20160512 12:33:38.589" level="FAIL">The element '//div[@class="box_status inc_active box-status-no-stock"]' should be visible, but it is not.</msg>
<status status="FAIL" endtime="20160512 12:33:38.589" starttime="20160512 12:33:38.326"></status>
</kw>
<msg timestamp="20160512 12:33:38.589" level="INFO">${have_stock} = False</msg>
<status status="PASS" endtime="20160512 12:33:38.589" starttime="20160512 12:33:38.325"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${color_no} + 1</arg>
</arguments>
<assign>
<var>${color_no}</var>
</assign>
<msg timestamp="20160512 12:33:38.616" level="INFO">${color_no} = 2</msg>
<status status="PASS" endtime="20160512 12:33:38.617" starttime="20160512 12:33:38.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${have_stock}</arg>
<arg>Level D Choose Product Color Item</arg>
<arg>${color_no}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:38.618" starttime="20160512 12:33:38.617"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:38.618" starttime="20160512 12:33:35.219"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:38.618" starttime="20160512 12:33:35.219"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20160512 12:33:43.622" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20160512 12:33:43.622" starttime="20160512 12:33:38.619"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:43.622" starttime="20160512 12:33:35.176"></status>
</kw>
<kw name="Level D Click Add To Cart success case" library="keywords_leveld">
<kw name="Wait Until Element is ready and click" library="Keywords_Common">
<arguments>
<arg>${LvD_Add_to_Cart}</arg>
<arg>60</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:43.632" starttime="20160512 12:33:43.626"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:43.652" starttime="20160512 12:33:43.633"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="Selenium2Library">
<doc>Waits until element specified with `locator` is enabled.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:43.667" starttime="20160512 12:33:43.653"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<msg timestamp="20160512 12:33:43.669" level="INFO">Clicking element 'jquery=.prd_price_box .btn_order.product-addtocart'.</msg>
<status status="PASS" endtime="20160512 12:33:43.713" starttime="20160512 12:33:43.668"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:43.713" starttime="20160512 12:33:43.624"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${LvD_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:45.538" starttime="20160512 12:33:43.714"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>${CartLightBox_Qualtity}</arg>
</arguments>
<assign>
<var>${is_cart_appreae}</var>
</assign>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${CartLightBox_Qualtity}</arg>
</arguments>
<msg timestamp="20160512 12:33:45.540" level="INFO">Verifying element '//*[@id='cartlightbox-item-quantity']' is visible.</msg>
<status status="PASS" endtime="20160512 12:33:45.573" starttime="20160512 12:33:45.540"></status>
</kw>
<msg timestamp="20160512 12:33:45.573" level="INFO">${is_cart_appreae} = True</msg>
<status status="PASS" endtime="20160512 12:33:45.573" starttime="20160512 12:33:45.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${is_cart_appreae}'!='True'</arg>
<arg>Wait Until Element is ready and click</arg>
<arg>${LvD_Add_to_Cart}</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:45.595" starttime="20160512 12:33:45.574"></status>
</kw>
<status status="PASS" endtime="20160512 12:33:45.595" starttime="20160512 12:33:43.623"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20160512 12:33:50.597" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20160512 12:33:50.598" starttime="20160512 12:33:45.596"></status>
</kw>
<kw name="Next to Checkout 1" library="Keywords_CartLightBox">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${CartLightBox_NextBtn}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:33:50.632" starttime="20160512 12:33:50.601"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${CartLightBox_NextBtn}</arg>
</arguments>
<msg timestamp="20160512 12:33:50.633" level="INFO">Clicking element '//*[@id="cartlightbox-go-next"]'.</msg>
<status status="PASS" endtime="20160512 12:33:50.686" starttime="20160512 12:33:50.633"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20160512 12:34:00.690" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20160512 12:34:00.690" starttime="20160512 12:33:50.687"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:00.713" starttime="20160512 12:34:00.691"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:00.714" starttime="20160512 12:33:50.599"></status>
</kw>
<kw name="Guest Fill Data and Submit Checkout1" library="ITM">
<arguments>
<arg>${Text_Email}</arg>
</arguments>
<kw name="Checkout1 - Input Email" library="Keywords_Checkout1">
<arguments>
<arg>${Text_Email}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout1_InputEmail}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:00.745" starttime="20160512 12:34:00.716"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${Checkout1_InputEmail}</arg>
<arg>${Text_Email}</arg>
</arguments>
<msg timestamp="20160512 12:34:00.747" level="INFO">Typing text 'guest@email.com' into text field '//*[@id="step1-username"]'</msg>
<status status="PASS" endtime="20160512 12:34:00.861" starttime="20160512 12:34:00.746"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:00.861" starttime="20160512 12:34:00.715"></status>
</kw>
<kw name="Checkout1 - Click Next" library="Keywords_Checkout1">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout1_NextBtn}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:00.929" starttime="20160512 12:34:00.864"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout1_NextBtn}</arg>
</arguments>
<msg timestamp="20160512 12:34:00.930" level="INFO">Clicking element '//*[@id="btnNext"]'.</msg>
<status status="PASS" endtime="20160512 12:34:00.986" starttime="20160512 12:34:00.930"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:00.987" starttime="20160512 12:34:00.862"></status>
</kw>
<kw name="Checkout1 - Wait Loading" library="Keywords_Checkout1">
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout1_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20160512 12:34:03.796" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20160512 12:34:03.796" starttime="20160512 12:34:03.575"></status>
</kw>
<msg timestamp="20160512 12:34:03.797" level="FAIL">StaleElementReferenceException: Message: stale element reference: element is not attached to the page document
  (Session info: chrome=50.0.2661.94)
  (Driver info: chromedriver=2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef961),platform=Mac OS X 10.11.4 x86_64)
</msg>
<status status="FAIL" endtime="20160512 12:34:03.797" starttime="20160512 12:34:00.989"></status>
</kw>
<status status="FAIL" endtime="20160512 12:34:03.797" starttime="20160512 12:34:00.988"></status>
</kw>
<status status="FAIL" endtime="20160512 12:34:03.797" starttime="20160512 12:34:00.714"></status>
</kw>
<status status="FAIL" endtime="20160512 12:34:03.798" starttime="20160512 12:33:15.692"></status>
</kw>
<kw type="teardown" name="Close All Browsers" library="Selenium2Library">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" endtime="20160512 12:34:04.015" starttime="20160512 12:34:03.800"></status>
</kw>
<tags>
<tag>Testing2</tag>
</tags>
<status status="FAIL" endtime="20160512 12:34:04.015" critical="yes" starttime="20160512 12:33:15.689">StaleElementReferenceException: Message: stale element reference: element is not attached to the page document
  (Session info: chrome=50.0.2661.94)
  (Driver info: chromedriver=2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef961),platform=Mac OS X 10.11.4 x86_64)
</status>
</test>
<test id="s1-t3" name="TC_020_[1-item][Freebie product] To verify that system can receive 'Failed delivery' status from FMS in 'shipped' status and return success without doing any action.">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>TestByThor</arg>
</arguments>
<assign>
<var>${robot_campaign_ITMMZ_1211}</var>
</assign>
<msg timestamp="20160512 12:34:04.023" level="INFO">${robot_campaign_ITMMZ_1211} = TestByThor</msg>
<status status="PASS" endtime="20160512 12:34:04.023" starttime="20160512 12:34:04.023"></status>
</kw>
<kw name="Freebie Checkout - Get Product Same Collection" library="keywords_prepare_data_checkout">
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>5</arg>
</arguments>
<assign>
<var>${start}</var>
</assign>
<msg timestamp="20160512 12:34:04.029" level="INFO">${start} = 5</msg>
<status status="PASS" endtime="20160512 12:34:04.029" starttime="20160512 12:34:04.028"></status>
</kw>
<kw name="Py Get Product Same Collection" library="Freebie">
<arguments>
<arg>${FREEBIE-COLLECTION-ID}</arg>
<arg>${start}</arg>
</arguments>
<assign>
<var>${data_products}</var>
</assign>
<msg timestamp="20160512 12:34:04.695" level="INFO">${data_products} = [{'inventory_id': u'HUAAA1112411', 'collection_id': 339L, 'product_title': u'Huawei Ascend Mate 7 \u0e41\u0e16\u0e21\u0e1f\u0e23\u0e35 Huawei Premium Case', 'collection_name': u'\u0e21\u0e37\u0e2d\u0e...</msg>
<status status="PASS" endtime="20160512 12:34:04.695" starttime="20160512 12:34:04.031"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${data_products}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${products1}</var>
</assign>
<msg timestamp="20160512 12:34:04.696" level="INFO">${products1} = {'inventory_id': u'HUAAA1112411', 'collection_id': 339L, 'product_title': u'Huawei Ascend Mate 7 \u0e41\u0e16\u0e21\u0e1f\u0e23\u0e35 Huawei Premium Case', 'collection_name': u'\u0e21\u0e37\u0e2d\u0e1...</msg>
<status status="PASS" endtime="20160512 12:34:04.696" starttime="20160512 12:34:04.696"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${data_products}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${products2}</var>
</assign>
<msg timestamp="20160512 12:34:04.697" level="INFO">${products2} = {'inventory_id': u'HUAAA1112511', 'collection_id': 339L, 'product_title': u'Huawei Ascend Mate 7 \u0e41\u0e16\u0e21\u0e1f\u0e23\u0e35 Huawei Premium Case', 'collection_name': u'\u0e21\u0e37\u0e2d\u0e1...</msg>
<status status="PASS" endtime="20160512 12:34:04.697" starttime="20160512 12:34:04.697"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${data_products}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${products3}</var>
</assign>
<msg timestamp="20160512 12:34:04.698" level="INFO">${products3} = {'inventory_id': u'SAAAB1136911', 'collection_id': 339L, 'product_title': u'Samsung Galaxy Tab A with S Pen (8\u0e19\u0e34\u0e49\u0e27) \u0e28\u0e39\u0e19\u0e22\u0e4c\u0e0b\u0e31\u0e21\u0e0b\u0e38\u0e...</msg>
<status status="PASS" endtime="20160512 12:34:04.698" starttime="20160512 12:34:04.698"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${products1}</arg>
<arg>inventory_id</arg>
</arguments>
<assign>
<var>${inventory_id1}</var>
</assign>
<msg timestamp="20160512 12:34:04.700" level="INFO">${inventory_id1} = HUAAA1112411</msg>
<status status="PASS" endtime="20160512 12:34:04.700" starttime="20160512 12:34:04.699"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${products1}</arg>
<arg>collection_id</arg>
</arguments>
<assign>
<var>${collection_id1}</var>
</assign>
<msg timestamp="20160512 12:34:04.701" level="INFO">${collection_id1} = 339</msg>
<status status="PASS" endtime="20160512 12:34:04.701" starttime="20160512 12:34:04.700"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${products2}</arg>
<arg>inventory_id</arg>
</arguments>
<assign>
<var>${inventory_id2}</var>
</assign>
<msg timestamp="20160512 12:34:04.702" level="INFO">${inventory_id2} = HUAAA1112511</msg>
<status status="PASS" endtime="20160512 12:34:04.702" starttime="20160512 12:34:04.701"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${products2}</arg>
<arg>collection_id</arg>
</arguments>
<assign>
<var>${collection_id2}</var>
</assign>
<msg timestamp="20160512 12:34:04.703" level="INFO">${collection_id2} = 339</msg>
<status status="PASS" endtime="20160512 12:34:04.703" starttime="20160512 12:34:04.702"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${products3}</arg>
<arg>inventory_id</arg>
</arguments>
<assign>
<var>${inventory_id3}</var>
</assign>
<msg timestamp="20160512 12:34:04.704" level="INFO">${inventory_id3} = SAAAB1136911</msg>
<status status="PASS" endtime="20160512 12:34:04.704" starttime="20160512 12:34:04.703"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${products3}</arg>
<arg>collection_id</arg>
</arguments>
<assign>
<var>${collection_id3}</var>
</assign>
<msg timestamp="20160512 12:34:04.705" level="INFO">${collection_id3} = 339</msg>
<status status="PASS" endtime="20160512 12:34:04.705" starttime="20160512 12:34:04.704"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal_same_collectionA}</arg>
<arg>${inventory_id1}</arg>
</arguments>
<msg timestamp="20160512 12:34:04.729" level="INFO">${var_freebie_normal_same_collectionA} = HUAAA1112411</msg>
<status status="PASS" endtime="20160512 12:34:04.729" starttime="20160512 12:34:04.705"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal_same_collectionB}</arg>
<arg>${inventory_id2}</arg>
</arguments>
<msg timestamp="20160512 12:34:04.753" level="INFO">${var_freebie_normal_same_collectionB} = HUAAA1112511</msg>
<status status="PASS" endtime="20160512 12:34:04.753" starttime="20160512 12:34:04.731"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal_same_collectionC}</arg>
<arg>${inventory_id3}</arg>
</arguments>
<msg timestamp="20160512 12:34:04.775" level="INFO">${var_freebie_normal_same_collectionC} = SAAAB1136911</msg>
<status status="PASS" endtime="20160512 12:34:04.775" starttime="20160512 12:34:04.754"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_collection_id}</arg>
<arg>${collection_id1}</arg>
</arguments>
<msg timestamp="20160512 12:34:04.800" level="INFO">${var_freebie_collection_id} = 339</msg>
<status status="PASS" endtime="20160512 12:34:04.800" starttime="20160512 12:34:04.776"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:04.800" starttime="20160512 12:34:04.025"></status>
</kw>
<kw name="Freebie Checkout - Get Free Product Status Inactive Content Draft No Collection" library="keywords_prepare_data_checkout">
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>5</arg>
</arguments>
<assign>
<var>${start}</var>
</assign>
<msg timestamp="20160512 12:34:04.802" level="INFO">${start} = 5</msg>
<status status="PASS" endtime="20160512 12:34:04.802" starttime="20160512 12:34:04.802"></status>
</kw>
<kw name="Py Get Product No Collections All Status" library="Freebie">
<arguments>
<arg>${start}</arg>
</arguments>
<assign>
<var>${products}</var>
</assign>
<msg timestamp="20160512 12:34:05.040" level="INFO">${products} = [{'product_active': u'0', 'pkey': 2499542061531L, 'product_id': 7443L, 'inventory_id': u'PAAAE1111111', 'variant_status': u'active', 'variant_id': 11972L, 'product_status': u'publish'}, {'product_acti...</msg>
<status status="PASS" endtime="20160512 12:34:05.040" starttime="20160512 12:34:04.803"></status>
</kw>
<kw name="Freebie Checkout - Set Variable Free Product" library="keywords_prepare_data_checkout">
<arguments>
<arg>${products}</arg>
</arguments>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${products}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${product}</var>
</assign>
<msg timestamp="20160512 12:34:05.044" level="INFO">${product} = {'product_active': u'0', 'pkey': 2499542061531L, 'product_id': 7443L, 'inventory_id': u'PAAAE1111111', 'variant_status': u'active', 'variant_id': 11972L, 'product_status': u'publish'}</msg>
<status status="PASS" endtime="20160512 12:34:05.044" starttime="20160512 12:34:05.044"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${product}</arg>
<arg>pkey</arg>
</arguments>
<assign>
<var>${pkey}</var>
</assign>
<msg timestamp="20160512 12:34:05.045" level="INFO">${pkey} = 2499542061531</msg>
<status status="PASS" endtime="20160512 12:34:05.045" starttime="20160512 12:34:05.045"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${product}</arg>
<arg>inventory_id</arg>
</arguments>
<assign>
<var>${inventory_id}</var>
</assign>
<msg timestamp="20160512 12:34:05.046" level="INFO">${inventory_id} = PAAAE1111111</msg>
<status status="PASS" endtime="20160512 12:34:05.046" starttime="20160512 12:34:05.046"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_free_level_d_pkey}</arg>
<arg>${pkey}</arg>
</arguments>
<msg timestamp="20160512 12:34:05.069" level="INFO">${var_freebie_free_level_d_pkey} = 2499542061531</msg>
<status status="PASS" endtime="20160512 12:34:05.069" starttime="20160512 12:34:05.047"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_free_level_d_inventory}</arg>
<arg>${inventory_id}</arg>
</arguments>
<msg timestamp="20160512 12:34:05.091" level="INFO">${var_freebie_free_level_d_inventory} = PAAAE1111111</msg>
<status status="PASS" endtime="20160512 12:34:05.091" starttime="20160512 12:34:05.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${var_freebie_free_level_d_inventory}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:05.093" starttime="20160512 12:34:05.092"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:05.093" starttime="20160512 12:34:05.042"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:05.093" starttime="20160512 12:34:04.801"></status>
</kw>
<kw name="Freebie Checkout - Get Main Product Same Collection A" library="keywords_prepare_data_checkout">
<kw name="Get Info Main Product From InventoryId" library="keywords_prepare_data_checkout">
<arguments>
<arg>${var_freebie_normal_same_collectionA}</arg>
</arguments>
<kw name="Get Inventory Pkey" library="DatabaseData">
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${pkey}</var>
</assign>
<msg timestamp="20160512 12:34:05.306" level="INFO">${pkey} = 2731265257113</msg>
<status status="PASS" endtime="20160512 12:34:05.306" starttime="20160512 12:34:05.096"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_main_level_d_pkey}</arg>
<arg>${pkey}</arg>
</arguments>
<msg timestamp="20160512 12:34:05.328" level="INFO">${var_freebie_main_level_d_pkey} = 2731265257113</msg>
<status status="PASS" endtime="20160512 12:34:05.328" starttime="20160512 12:34:05.307"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_main_level_d_inventory}</arg>
<arg>${inventory_id}</arg>
</arguments>
<msg timestamp="20160512 12:34:05.356" level="INFO">${var_freebie_main_level_d_inventory} = HUAAA1112411</msg>
<status status="PASS" endtime="20160512 12:34:05.356" starttime="20160512 12:34:05.329"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${var_freebie_main_level_d_pkey}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:05.357" starttime="20160512 12:34:05.357"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${var_freebie_main_level_d_inventory}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:05.358" starttime="20160512 12:34:05.358"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:05.358" starttime="20160512 12:34:05.095"></status>
</kw>
<kw name="Freebie Checkout - Get Style Option Main Product" library="keywords_prepare_data_checkout">
<kw name="Py Get Multiple Style Options Pkey" library="Freebie">
<arguments>
<arg>${var_freebie_main_level_d_inventory}</arg>
</arguments>
<assign>
<var>${style}</var>
</assign>
<msg timestamp="20160512 12:34:05.565" level="INFO">${style} = {'style1': 21238843494689L}</msg>
<status status="PASS" endtime="20160512 12:34:05.565" starttime="20160512 12:34:05.360"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${style}</arg>
<arg>style1</arg>
</arguments>
<assign>
<var>${style1}</var>
</assign>
<msg timestamp="20160512 12:34:05.566" level="INFO">${style1} = 21238843494689</msg>
<status status="PASS" endtime="20160512 12:34:05.566" starttime="20160512 12:34:05.566"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_main_level_d_style1}</arg>
<arg>${style1}</arg>
</arguments>
<msg timestamp="20160512 12:34:05.590" level="INFO">${var_freebie_main_level_d_style1} = 21238843494689</msg>
<status status="PASS" endtime="20160512 12:34:05.590" starttime="20160512 12:34:05.567"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:05.591" starttime="20160512 12:34:05.359"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:05.591" starttime="20160512 12:34:05.094"></status>
</kw>
<kw name="Freebie Checkout - Get Normal Product Same Collection B" library="keywords_prepare_data_checkout">
<kw name="Get Info Normal Product From InventoryId" library="keywords_prepare_data_checkout">
<arguments>
<arg>${var_freebie_normal_same_collectionB}</arg>
</arguments>
<kw name="Get Inventory Pkey" library="DatabaseData">
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${pkey}</var>
</assign>
<msg timestamp="20160512 12:34:05.803" level="INFO">${pkey} = 2731265257113</msg>
<status status="PASS" endtime="20160512 12:34:05.804" starttime="20160512 12:34:05.594"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal_level_d_pkey}</arg>
<arg>${pkey}</arg>
</arguments>
<msg timestamp="20160512 12:34:05.827" level="INFO">${var_freebie_normal_level_d_pkey} = 2731265257113</msg>
<status status="PASS" endtime="20160512 12:34:05.827" starttime="20160512 12:34:05.805"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal_level_d_inventory}</arg>
<arg>${inventory_id}</arg>
</arguments>
<msg timestamp="20160512 12:34:05.850" level="INFO">${var_freebie_normal_level_d_inventory} = HUAAA1112511</msg>
<status status="PASS" endtime="20160512 12:34:05.850" starttime="20160512 12:34:05.828"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>normal:${var_freebie_normal_level_d_pkey}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:05.851" starttime="20160512 12:34:05.851"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>normal:${var_freebie_normal_level_d_inventory}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:05.852" starttime="20160512 12:34:05.852"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:05.852" starttime="20160512 12:34:05.593"></status>
</kw>
<kw name="Freebie Checkout - Get Style Option Normal Product" library="keywords_prepare_data_checkout">
<kw name="Py Get Multiple Style Options Pkey" library="Freebie">
<arguments>
<arg>${var_freebie_normal_level_d_inventory}</arg>
</arguments>
<assign>
<var>${style}</var>
</assign>
<msg timestamp="20160512 12:34:06.064" level="INFO">${style} = {'style1': 21446917465915L}</msg>
<status status="PASS" endtime="20160512 12:34:06.064" starttime="20160512 12:34:05.854"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${style}</arg>
<arg>style1</arg>
</arguments>
<assign>
<var>${style1}</var>
</assign>
<msg timestamp="20160512 12:34:06.066" level="INFO">${style1} = 21446917465915</msg>
<status status="PASS" endtime="20160512 12:34:06.067" starttime="20160512 12:34:06.066"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal_level_d_style1}</arg>
<arg>${style1}</arg>
</arguments>
<msg timestamp="20160512 12:34:06.091" level="INFO">${var_freebie_normal_level_d_style1} = 21446917465915</msg>
<status status="PASS" endtime="20160512 12:34:06.091" starttime="20160512 12:34:06.068"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:06.091" starttime="20160512 12:34:05.853"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:06.091" starttime="20160512 12:34:05.592"></status>
</kw>
<kw name="Freebie Checkout - Get Normal2 Product Same Collection C" library="keywords_prepare_data_checkout">
<kw name="Get Info Normal2 Product From InventoryId" library="keywords_prepare_data_checkout">
<arguments>
<arg>${var_freebie_normal_same_collectionC}</arg>
</arguments>
<kw name="Get Inventory Pkey" library="DatabaseData">
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${pkey}</var>
</assign>
<msg timestamp="20160512 12:34:06.302" level="INFO">${pkey} = 2561112067156</msg>
<status status="PASS" endtime="20160512 12:34:06.302" starttime="20160512 12:34:06.094"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal2_level_d_pkey}</arg>
<arg>${pkey}</arg>
</arguments>
<msg timestamp="20160512 12:34:06.329" level="INFO">${var_freebie_normal2_level_d_pkey} = 2561112067156</msg>
<status status="PASS" endtime="20160512 12:34:06.329" starttime="20160512 12:34:06.303"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal2_level_d_inventory}</arg>
<arg>${inventory_id}</arg>
</arguments>
<msg timestamp="20160512 12:34:06.352" level="INFO">${var_freebie_normal2_level_d_inventory} = SAAAB1136911</msg>
<status status="PASS" endtime="20160512 12:34:06.352" starttime="20160512 12:34:06.330"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>normal2:${var_freebie_normal2_level_d_pkey}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:06.353" starttime="20160512 12:34:06.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>normal2:${var_freebie_normal2_level_d_inventory}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:06.354" starttime="20160512 12:34:06.354"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:06.355" starttime="20160512 12:34:06.093"></status>
</kw>
<kw name="Freebie Checkout - Get Style Option Normal2 Product" library="keywords_prepare_data_checkout">
<kw name="Py Get Multiple Style Options Pkey" library="Freebie">
<arguments>
<arg>${var_freebie_normal2_level_d_inventory}</arg>
</arguments>
<assign>
<var>${style}</var>
</assign>
<msg timestamp="20160512 12:34:06.567" level="INFO">${style} = {'style1': 21285042348986L}</msg>
<status status="PASS" endtime="20160512 12:34:06.567" starttime="20160512 12:34:06.358"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${style}</arg>
<arg>style1</arg>
</arguments>
<assign>
<var>${style1}</var>
</assign>
<msg timestamp="20160512 12:34:06.570" level="INFO">${style1} = 21285042348986</msg>
<status status="PASS" endtime="20160512 12:34:06.570" starttime="20160512 12:34:06.569"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal2_level_d_style1}</arg>
<arg>${style1}</arg>
</arguments>
<msg timestamp="20160512 12:34:06.591" level="INFO">${var_freebie_normal2_level_d_style1} = 21285042348986</msg>
<status status="PASS" endtime="20160512 12:34:06.591" starttime="20160512 12:34:06.571"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:06.592" starttime="20160512 12:34:06.356"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:06.592" starttime="20160512 12:34:06.092"></status>
</kw>
<kw name="Freebie Checkout - Check Current Stock Main Product" library="keywords_checkout">
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${var_freebie_main_level_d_inventory}</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:06.599" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:06.599" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:06.599" starttime="20160512 12:34:06.599"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:06.600" starttime="20160512 12:34:06.600"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:07.151" starttime="20160512 12:34:06.601"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:07.152" starttime="20160512 12:34:07.152"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:07.153" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"HUAAA1112411":16},"diff":{"HUAAA1112411":16},"stock":{"HUAAA1112411":66},"hold":{"HUAAA1112411":50}}}</msg>
<status status="PASS" endtime="20160512 12:34:07.153" starttime="20160512 12:34:07.153"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:07.154" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:07.155" starttime="20160512 12:34:07.154"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:07.155" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:07.156" starttime="20160512 12:34:07.155"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:07.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:07.157" starttime="20160512 12:34:07.156"></status>
</kw>
<msg timestamp="20160512 12:34:07.157" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"HUAAA1112411":16},"diff":{"HUAAA1112411":16},"stock":{"HUAAA1112411":66},"hold":{"HUAAA1112411":50}}}</msg>
<status status="PASS" endtime="20160512 12:34:07.157" starttime="20160512 12:34:06.597"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:34:07.158" level="INFO">${data} = {"diff": {"HUAAA1112411": 16}, "hold": {"HUAAA1112411": 50}, "remaining": {"HUAAA1112411": 16}, "stock": {"HUAAA1112411": 66}}</msg>
<status status="PASS" endtime="20160512 12:34:07.158" starttime="20160512 12:34:07.157"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:34:07.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:07.159" starttime="20160512 12:34:07.159"></status>
</kw>
<msg timestamp="20160512 12:34:07.159" level="INFO">${stock} = {"diff": {"HUAAA1112411": 16}, "hold": {"HUAAA1112411": 50}, "remaining": {"HUAAA1112411": 16}, "stock": {"HUAAA1112411": 66}}</msg>
<status status="PASS" endtime="20160512 12:34:07.159" starttime="20160512 12:34:06.596"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/remaining/${var_freebie_main_level_d_inventory}</arg>
</arguments>
<assign>
<var>${remaining}</var>
</assign>
<msg timestamp="20160512 12:34:07.161" level="INFO">${remaining} = 16</msg>
<status status="PASS" endtime="20160512 12:34:07.161" starttime="20160512 12:34:07.160"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/hold/${var_freebie_main_level_d_inventory}</arg>
</arguments>
<assign>
<var>${hold}</var>
</assign>
<msg timestamp="20160512 12:34:07.162" level="INFO">${hold} = 50</msg>
<status status="PASS" endtime="20160512 12:34:07.162" starttime="20160512 12:34:07.161"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_main_product_remaining_old}</arg>
<arg>${remaining}</arg>
</arguments>
<msg timestamp="20160512 12:34:07.183" level="INFO">${var_freebie_main_product_remaining_old} = 16</msg>
<status status="PASS" endtime="20160512 12:34:07.183" starttime="20160512 12:34:07.162"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_main_product_hold_old}</arg>
<arg>${hold}</arg>
</arguments>
<msg timestamp="20160512 12:34:07.209" level="INFO">${var_freebie_main_product_hold_old} = 50</msg>
<status status="PASS" endtime="20160512 12:34:07.209" starttime="20160512 12:34:07.184"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>main:${var_freebie_main_product_remaining_old}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:07.211" starttime="20160512 12:34:07.210"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:07.211" starttime="20160512 12:34:06.593"></status>
</kw>
<kw name="Freebie Checkout - Check Current Stock Free Product" library="keywords_checkout">
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${var_freebie_free_level_d_inventory}</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:07.215" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:07.216" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:07.216" starttime="20160512 12:34:07.215"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:07.216" starttime="20160512 12:34:07.216"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:07.765" starttime="20160512 12:34:07.217"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:07.766" starttime="20160512 12:34:07.766"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:07.768" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"PAAAE1111111":18},"diff":{"PAAAE1111111":18},"stock":{"PAAAE1111111":49},"hold":{"PAAAE1111111":31}}}</msg>
<status status="PASS" endtime="20160512 12:34:07.768" starttime="20160512 12:34:07.767"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:07.769" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:07.769" starttime="20160512 12:34:07.768"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:07.770" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:07.770" starttime="20160512 12:34:07.769"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:07.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:07.771" starttime="20160512 12:34:07.770"></status>
</kw>
<msg timestamp="20160512 12:34:07.771" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"PAAAE1111111":18},"diff":{"PAAAE1111111":18},"stock":{"PAAAE1111111":49},"hold":{"PAAAE1111111":31}}}</msg>
<status status="PASS" endtime="20160512 12:34:07.771" starttime="20160512 12:34:07.214"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:34:07.772" level="INFO">${data} = {"diff": {"PAAAE1111111": 18}, "hold": {"PAAAE1111111": 31}, "remaining": {"PAAAE1111111": 18}, "stock": {"PAAAE1111111": 49}}</msg>
<status status="PASS" endtime="20160512 12:34:07.772" starttime="20160512 12:34:07.772"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:34:07.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:07.773" starttime="20160512 12:34:07.773"></status>
</kw>
<msg timestamp="20160512 12:34:07.773" level="INFO">${stock} = {"diff": {"PAAAE1111111": 18}, "hold": {"PAAAE1111111": 31}, "remaining": {"PAAAE1111111": 18}, "stock": {"PAAAE1111111": 49}}</msg>
<status status="PASS" endtime="20160512 12:34:07.774" starttime="20160512 12:34:07.213"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/remaining/${var_freebie_free_level_d_inventory}</arg>
</arguments>
<assign>
<var>${remaining}</var>
</assign>
<msg timestamp="20160512 12:34:07.776" level="INFO">${remaining} = 18</msg>
<status status="PASS" endtime="20160512 12:34:07.776" starttime="20160512 12:34:07.775"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/hold/${var_freebie_free_level_d_inventory}</arg>
</arguments>
<assign>
<var>${hold}</var>
</assign>
<msg timestamp="20160512 12:34:07.778" level="INFO">${hold} = 31</msg>
<status status="PASS" endtime="20160512 12:34:07.778" starttime="20160512 12:34:07.777"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_free_product_remaining_old}</arg>
<arg>${remaining}</arg>
</arguments>
<msg timestamp="20160512 12:34:07.856" level="INFO">${var_freebie_free_product_remaining_old} = 18</msg>
<status status="PASS" endtime="20160512 12:34:07.856" starttime="20160512 12:34:07.779"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_free_product_hold_old}</arg>
<arg>${hold}</arg>
</arguments>
<msg timestamp="20160512 12:34:07.877" level="INFO">${var_freebie_free_product_hold_old} = 31</msg>
<status status="PASS" endtime="20160512 12:34:07.877" starttime="20160512 12:34:07.857"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>free:${var_freebie_free_product_remaining_old}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:07.878" starttime="20160512 12:34:07.878"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:07.879" starttime="20160512 12:34:07.212"></status>
</kw>
<kw name="Freebie Checkout - Check Current Stock Normal Product" library="keywords_checkout">
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${var_freebie_normal_level_d_inventory}</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:07.886" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:07.886" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:07.886" starttime="20160512 12:34:07.885"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:07.887" starttime="20160512 12:34:07.887"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:08.584" starttime="20160512 12:34:07.888"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:08.586" starttime="20160512 12:34:08.585"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:08.587" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"HUAAA1112511":20},"diff":{"HUAAA1112511":20},"stock":{"HUAAA1112511":28},"hold":{"HUAAA1112511":8}}}</msg>
<status status="PASS" endtime="20160512 12:34:08.587" starttime="20160512 12:34:08.587"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:08.589" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:08.589" starttime="20160512 12:34:08.588"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:08.590" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:08.590" starttime="20160512 12:34:08.589"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:08.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:08.591" starttime="20160512 12:34:08.591"></status>
</kw>
<msg timestamp="20160512 12:34:08.591" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"HUAAA1112511":20},"diff":{"HUAAA1112511":20},"stock":{"HUAAA1112511":28},"hold":{"HUAAA1112511":8}}}</msg>
<status status="PASS" endtime="20160512 12:34:08.591" starttime="20160512 12:34:07.884"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:34:08.593" level="INFO">${data} = {"diff": {"HUAAA1112511": 20}, "hold": {"HUAAA1112511": 8}, "remaining": {"HUAAA1112511": 20}, "stock": {"HUAAA1112511": 28}}</msg>
<status status="PASS" endtime="20160512 12:34:08.593" starttime="20160512 12:34:08.592"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:34:08.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:08.594" starttime="20160512 12:34:08.593"></status>
</kw>
<msg timestamp="20160512 12:34:08.594" level="INFO">${stock} = {"diff": {"HUAAA1112511": 20}, "hold": {"HUAAA1112511": 8}, "remaining": {"HUAAA1112511": 20}, "stock": {"HUAAA1112511": 28}}</msg>
<status status="PASS" endtime="20160512 12:34:08.594" starttime="20160512 12:34:07.882"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/remaining/${var_freebie_normal_level_d_inventory}</arg>
</arguments>
<assign>
<var>${remaining}</var>
</assign>
<msg timestamp="20160512 12:34:08.596" level="INFO">${remaining} = 20</msg>
<status status="PASS" endtime="20160512 12:34:08.596" starttime="20160512 12:34:08.595"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/hold/${var_freebie_normal_level_d_inventory}</arg>
</arguments>
<assign>
<var>${hold}</var>
</assign>
<msg timestamp="20160512 12:34:08.597" level="INFO">${hold} = 8</msg>
<status status="PASS" endtime="20160512 12:34:08.597" starttime="20160512 12:34:08.597"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal_product_remaining_old}</arg>
<arg>${remaining}</arg>
</arguments>
<msg timestamp="20160512 12:34:08.621" level="INFO">${var_freebie_normal_product_remaining_old} = 20</msg>
<status status="PASS" endtime="20160512 12:34:08.621" starttime="20160512 12:34:08.598"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal_product_hold_old}</arg>
<arg>${hold}</arg>
</arguments>
<msg timestamp="20160512 12:34:08.642" level="INFO">${var_freebie_normal_product_hold_old} = 8</msg>
<status status="PASS" endtime="20160512 12:34:08.643" starttime="20160512 12:34:08.622"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>normal:${var_freebie_normal_product_remaining_old}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:08.644" starttime="20160512 12:34:08.643"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:08.644" starttime="20160512 12:34:07.880"></status>
</kw>
<kw name="Freebie Checkout - Check Current Stock Normal2 Product" library="keywords_checkout">
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${var_freebie_normal2_level_d_inventory}</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:08.651" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:08.651" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:08.651" starttime="20160512 12:34:08.651"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:08.652" starttime="20160512 12:34:08.652"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:09.197" starttime="20160512 12:34:08.653"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:09.199" starttime="20160512 12:34:09.198"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:09.200" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"SAAAB1136911":20},"diff":{"SAAAB1136911":20},"stock":{"SAAAB1136911":53},"hold":{"SAAAB1136911":33}}}</msg>
<status status="PASS" endtime="20160512 12:34:09.200" starttime="20160512 12:34:09.200"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:09.202" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:09.202" starttime="20160512 12:34:09.201"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:09.203" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:09.203" starttime="20160512 12:34:09.203"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:09.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:09.204" starttime="20160512 12:34:09.204"></status>
</kw>
<msg timestamp="20160512 12:34:09.204" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"SAAAB1136911":20},"diff":{"SAAAB1136911":20},"stock":{"SAAAB1136911":53},"hold":{"SAAAB1136911":33}}}</msg>
<status status="PASS" endtime="20160512 12:34:09.204" starttime="20160512 12:34:08.649"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:34:09.205" level="INFO">${data} = {"diff": {"SAAAB1136911": 20}, "hold": {"SAAAB1136911": 33}, "remaining": {"SAAAB1136911": 20}, "stock": {"SAAAB1136911": 53}}</msg>
<status status="PASS" endtime="20160512 12:34:09.205" starttime="20160512 12:34:09.205"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:34:09.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:09.206" starttime="20160512 12:34:09.206"></status>
</kw>
<msg timestamp="20160512 12:34:09.207" level="INFO">${stock} = {"diff": {"SAAAB1136911": 20}, "hold": {"SAAAB1136911": 33}, "remaining": {"SAAAB1136911": 20}, "stock": {"SAAAB1136911": 53}}</msg>
<status status="PASS" endtime="20160512 12:34:09.207" starttime="20160512 12:34:08.648"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/remaining/${var_freebie_normal2_level_d_inventory}</arg>
</arguments>
<assign>
<var>${remaining}</var>
</assign>
<msg timestamp="20160512 12:34:09.208" level="INFO">${remaining} = 20</msg>
<status status="PASS" endtime="20160512 12:34:09.208" starttime="20160512 12:34:09.207"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/hold/${var_freebie_normal2_level_d_inventory}</arg>
</arguments>
<assign>
<var>${hold}</var>
</assign>
<msg timestamp="20160512 12:34:09.209" level="INFO">${hold} = 33</msg>
<status status="PASS" endtime="20160512 12:34:09.209" starttime="20160512 12:34:09.209"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal2_product_remaining_old}</arg>
<arg>${remaining}</arg>
</arguments>
<msg timestamp="20160512 12:34:09.231" level="INFO">${var_freebie_normal2_product_remaining_old} = 20</msg>
<status status="PASS" endtime="20160512 12:34:09.231" starttime="20160512 12:34:09.210"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_normal2_product_hold_old}</arg>
<arg>${hold}</arg>
</arguments>
<msg timestamp="20160512 12:34:09.257" level="INFO">${var_freebie_normal2_product_hold_old} = 33</msg>
<status status="PASS" endtime="20160512 12:34:09.257" starttime="20160512 12:34:09.232"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>normal2:${var_freebie_normal2_product_remaining_old}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:09.259" starttime="20160512 12:34:09.258"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:09.259" starttime="20160512 12:34:08.645"></status>
</kw>
<kw name="Freebie Checkout - Set Remaining Main Product" library="keywords_checkout">
<arguments>
<arg>20</arg>
</arguments>
<kw name="Adjust Stock Remaining By Inventory ID" library="update_stock">
<arguments>
<arg>${var_freebie_main_level_d_inventory}</arg>
<arg>${main_stock}</arg>
</arguments>
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:09.268" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:09.268" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:09.268" starttime="20160512 12:34:09.267"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:09.269" starttime="20160512 12:34:09.268"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:09.812" starttime="20160512 12:34:09.269"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:09.814" starttime="20160512 12:34:09.813"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:09.816" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"HUAAA1112411":16},"diff":{"HUAAA1112411":16},"stock":{"HUAAA1112411":66},"hold":{"HUAAA1112411":50}}}</msg>
<status status="PASS" endtime="20160512 12:34:09.816" starttime="20160512 12:34:09.815"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:09.818" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:09.818" starttime="20160512 12:34:09.817"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:09.819" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:09.819" starttime="20160512 12:34:09.819"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:09.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:09.820" starttime="20160512 12:34:09.820"></status>
</kw>
<msg timestamp="20160512 12:34:09.820" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"HUAAA1112411":16},"diff":{"HUAAA1112411":16},"stock":{"HUAAA1112411":66},"hold":{"HUAAA1112411":50}}}</msg>
<status status="PASS" endtime="20160512 12:34:09.820" starttime="20160512 12:34:09.266"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:34:09.821" level="INFO">${data} = {"diff": {"HUAAA1112411": 16}, "hold": {"HUAAA1112411": 50}, "remaining": {"HUAAA1112411": 16}, "stock": {"HUAAA1112411": 66}}</msg>
<status status="PASS" endtime="20160512 12:34:09.821" starttime="20160512 12:34:09.821"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:34:09.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:09.822" starttime="20160512 12:34:09.822"></status>
</kw>
<msg timestamp="20160512 12:34:09.823" level="INFO">${stock} = {"diff": {"HUAAA1112411": 16}, "hold": {"HUAAA1112411": 50}, "remaining": {"HUAAA1112411": 16}, "stock": {"HUAAA1112411": 66}}</msg>
<status status="PASS" endtime="20160512 12:34:09.823" starttime="20160512 12:34:09.264"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/hold/${inventory_id}</arg>
</arguments>
<assign>
<var>${hold}</var>
</assign>
<msg timestamp="20160512 12:34:09.824" level="INFO">${hold} = 50</msg>
<status status="PASS" endtime="20160512 12:34:09.824" starttime="20160512 12:34:09.823"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${hold}+${remaining}</arg>
</arguments>
<assign>
<var>${new_total}</var>
</assign>
<msg timestamp="20160512 12:34:09.848" level="INFO">${new_total} = 70</msg>
<status status="PASS" endtime="20160512 12:34:09.848" starttime="20160512 12:34:09.824"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>[{"sku":"${inventory_id}","total" : "${new_total}","note": "Set Stock by Robot","quantity": "${remaining}"}]</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:09.850" level="INFO">${content} = [{"sku":"HUAAA1112411","total" : "70","note": "Set Stock by Robot","quantity": "20"}]</msg>
<status status="PASS" endtime="20160512 12:34:09.850" starttime="20160512 12:34:09.849"></status>
</kw>
<kw name="Send Http Post Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>${PCMS_PORT}</arg>
<arg>/api/v4/stock/increase</arg>
<arg>${content}</arg>
<arg>Content-type=application/json</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:09.852" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:09.852" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:09.852" starttime="20160512 12:34:09.852"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:09.853" starttime="20160512 12:34:09.853"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20160512 12:34:09.854" level="INFO">Request body set to "[{"sku":"HUAAA1112411","total" : "70","note": "Set Stock by Robot","quantity": "20"}]".</msg>
<status status="PASS" endtime="20160512 12:34:09.854" starttime="20160512 12:34:09.854"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20160512 12:34:09.855" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20160512 12:34:09.855" starttime="20160512 12:34:09.855"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:10.427" starttime="20160512 12:34:09.856"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:10.428" starttime="20160512 12:34:10.428"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:10.429" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"HUAAA1112411":{"sku":"HUAAA1112411","total":"70"}}}</msg>
<status status="PASS" endtime="20160512 12:34:10.429" starttime="20160512 12:34:10.428"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:10.430" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:10.430" starttime="20160512 12:34:10.429"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:10.431" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:10.431" starttime="20160512 12:34:10.431"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:10.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:10.432" starttime="20160512 12:34:10.432"></status>
</kw>
<msg timestamp="20160512 12:34:10.432" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"HUAAA1112411":{"sku":"HUAAA1112411","total":"70"}}}</msg>
<status status="PASS" endtime="20160512 12:34:10.432" starttime="20160512 12:34:09.850"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:10.432" starttime="20160512 12:34:09.263"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:10.432" starttime="20160512 12:34:09.261"></status>
</kw>
<kw name="Freebie Checkout - Set Remaining Free Product" library="keywords_checkout">
<arguments>
<arg>20</arg>
</arguments>
<kw name="Adjust Stock Remaining By Inventory ID" library="update_stock">
<arguments>
<arg>${var_freebie_free_level_d_inventory}</arg>
<arg>${free_stock}</arg>
</arguments>
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:10.439" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:10.439" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:10.439" starttime="20160512 12:34:10.439"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:10.440" starttime="20160512 12:34:10.440"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:10.939" starttime="20160512 12:34:10.441"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:10.940" starttime="20160512 12:34:10.940"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:10.941" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"PAAAE1111111":18},"diff":{"PAAAE1111111":18},"stock":{"PAAAE1111111":49},"hold":{"PAAAE1111111":31}}}</msg>
<status status="PASS" endtime="20160512 12:34:10.941" starttime="20160512 12:34:10.941"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:10.942" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:10.942" starttime="20160512 12:34:10.942"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:10.943" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:10.943" starttime="20160512 12:34:10.943"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:10.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:10.944" starttime="20160512 12:34:10.944"></status>
</kw>
<msg timestamp="20160512 12:34:10.945" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"PAAAE1111111":18},"diff":{"PAAAE1111111":18},"stock":{"PAAAE1111111":49},"hold":{"PAAAE1111111":31}}}</msg>
<status status="PASS" endtime="20160512 12:34:10.945" starttime="20160512 12:34:10.437"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:34:10.946" level="INFO">${data} = {"diff": {"PAAAE1111111": 18}, "hold": {"PAAAE1111111": 31}, "remaining": {"PAAAE1111111": 18}, "stock": {"PAAAE1111111": 49}}</msg>
<status status="PASS" endtime="20160512 12:34:10.946" starttime="20160512 12:34:10.945"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:34:10.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:10.947" starttime="20160512 12:34:10.946"></status>
</kw>
<msg timestamp="20160512 12:34:10.947" level="INFO">${stock} = {"diff": {"PAAAE1111111": 18}, "hold": {"PAAAE1111111": 31}, "remaining": {"PAAAE1111111": 18}, "stock": {"PAAAE1111111": 49}}</msg>
<status status="PASS" endtime="20160512 12:34:10.947" starttime="20160512 12:34:10.436"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/hold/${inventory_id}</arg>
</arguments>
<assign>
<var>${hold}</var>
</assign>
<msg timestamp="20160512 12:34:10.948" level="INFO">${hold} = 31</msg>
<status status="PASS" endtime="20160512 12:34:10.948" starttime="20160512 12:34:10.948"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${hold}+${remaining}</arg>
</arguments>
<assign>
<var>${new_total}</var>
</assign>
<msg timestamp="20160512 12:34:10.968" level="INFO">${new_total} = 51</msg>
<status status="PASS" endtime="20160512 12:34:10.968" starttime="20160512 12:34:10.949"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>[{"sku":"${inventory_id}","total" : "${new_total}","note": "Set Stock by Robot","quantity": "${remaining}"}]</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:10.969" level="INFO">${content} = [{"sku":"PAAAE1111111","total" : "51","note": "Set Stock by Robot","quantity": "20"}]</msg>
<status status="PASS" endtime="20160512 12:34:10.969" starttime="20160512 12:34:10.968"></status>
</kw>
<kw name="Send Http Post Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>${PCMS_PORT}</arg>
<arg>/api/v4/stock/increase</arg>
<arg>${content}</arg>
<arg>Content-type=application/json</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:10.971" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:10.971" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:10.971" starttime="20160512 12:34:10.971"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:10.972" starttime="20160512 12:34:10.972"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20160512 12:34:10.973" level="INFO">Request body set to "[{"sku":"PAAAE1111111","total" : "51","note": "Set Stock by Robot","quantity": "20"}]".</msg>
<status status="PASS" endtime="20160512 12:34:10.973" starttime="20160512 12:34:10.973"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20160512 12:34:10.974" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20160512 12:34:10.974" starttime="20160512 12:34:10.974"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:11.449" starttime="20160512 12:34:10.975"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:11.450" starttime="20160512 12:34:11.450"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:11.451" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"PAAAE1111111":{"sku":"PAAAE1111111","total":"51"}}}</msg>
<status status="PASS" endtime="20160512 12:34:11.451" starttime="20160512 12:34:11.451"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:11.453" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:11.453" starttime="20160512 12:34:11.452"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:11.454" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:11.455" starttime="20160512 12:34:11.454"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:11.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:11.456" starttime="20160512 12:34:11.456"></status>
</kw>
<msg timestamp="20160512 12:34:11.457" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"PAAAE1111111":{"sku":"PAAAE1111111","total":"51"}}}</msg>
<status status="PASS" endtime="20160512 12:34:11.457" starttime="20160512 12:34:10.969"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:11.457" starttime="20160512 12:34:10.434"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:11.457" starttime="20160512 12:34:10.433"></status>
</kw>
<kw name="Freebie Checkout - Set Remaining Normal Product" library="keywords_checkout">
<arguments>
<arg>20</arg>
</arguments>
<kw name="Adjust Stock Remaining By Inventory ID" library="update_stock">
<arguments>
<arg>${var_freebie_normal_level_d_inventory}</arg>
<arg>${normal_stock}</arg>
</arguments>
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:11.465" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:11.465" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:11.465" starttime="20160512 12:34:11.465"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:11.466" starttime="20160512 12:34:11.466"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:11.964" starttime="20160512 12:34:11.467"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:11.966" starttime="20160512 12:34:11.965"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:11.967" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"HUAAA1112511":20},"diff":{"HUAAA1112511":20},"stock":{"HUAAA1112511":28},"hold":{"HUAAA1112511":8}}}</msg>
<status status="PASS" endtime="20160512 12:34:11.967" starttime="20160512 12:34:11.966"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:11.968" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:11.968" starttime="20160512 12:34:11.967"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:11.969" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:11.969" starttime="20160512 12:34:11.969"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:11.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:11.970" starttime="20160512 12:34:11.970"></status>
</kw>
<msg timestamp="20160512 12:34:11.970" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"HUAAA1112511":20},"diff":{"HUAAA1112511":20},"stock":{"HUAAA1112511":28},"hold":{"HUAAA1112511":8}}}</msg>
<status status="PASS" endtime="20160512 12:34:11.970" starttime="20160512 12:34:11.463"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:34:11.971" level="INFO">${data} = {"diff": {"HUAAA1112511": 20}, "hold": {"HUAAA1112511": 8}, "remaining": {"HUAAA1112511": 20}, "stock": {"HUAAA1112511": 28}}</msg>
<status status="PASS" endtime="20160512 12:34:11.971" starttime="20160512 12:34:11.971"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:34:11.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:11.972" starttime="20160512 12:34:11.972"></status>
</kw>
<msg timestamp="20160512 12:34:11.972" level="INFO">${stock} = {"diff": {"HUAAA1112511": 20}, "hold": {"HUAAA1112511": 8}, "remaining": {"HUAAA1112511": 20}, "stock": {"HUAAA1112511": 28}}</msg>
<status status="PASS" endtime="20160512 12:34:11.972" starttime="20160512 12:34:11.462"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/hold/${inventory_id}</arg>
</arguments>
<assign>
<var>${hold}</var>
</assign>
<msg timestamp="20160512 12:34:11.975" level="INFO">${hold} = 8</msg>
<status status="PASS" endtime="20160512 12:34:11.975" starttime="20160512 12:34:11.974"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${hold}+${remaining}</arg>
</arguments>
<assign>
<var>${new_total}</var>
</assign>
<msg timestamp="20160512 12:34:11.999" level="INFO">${new_total} = 28</msg>
<status status="PASS" endtime="20160512 12:34:11.999" starttime="20160512 12:34:11.976"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>[{"sku":"${inventory_id}","total" : "${new_total}","note": "Set Stock by Robot","quantity": "${remaining}"}]</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:12.001" level="INFO">${content} = [{"sku":"HUAAA1112511","total" : "28","note": "Set Stock by Robot","quantity": "20"}]</msg>
<status status="PASS" endtime="20160512 12:34:12.001" starttime="20160512 12:34:12.000"></status>
</kw>
<kw name="Send Http Post Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>${PCMS_PORT}</arg>
<arg>/api/v4/stock/increase</arg>
<arg>${content}</arg>
<arg>Content-type=application/json</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:12.003" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:12.003" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:12.003" starttime="20160512 12:34:12.003"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:12.004" starttime="20160512 12:34:12.004"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20160512 12:34:12.005" level="INFO">Request body set to "[{"sku":"HUAAA1112511","total" : "28","note": "Set Stock by Robot","quantity": "20"}]".</msg>
<status status="PASS" endtime="20160512 12:34:12.005" starttime="20160512 12:34:12.005"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20160512 12:34:12.006" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20160512 12:34:12.006" starttime="20160512 12:34:12.006"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:12.930" starttime="20160512 12:34:12.007"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:12.932" starttime="20160512 12:34:12.932"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:12.934" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"HUAAA1112511":{"sku":"HUAAA1112511","total":"28"}}}</msg>
<status status="PASS" endtime="20160512 12:34:12.934" starttime="20160512 12:34:12.933"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:12.935" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:12.935" starttime="20160512 12:34:12.934"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:12.936" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:12.936" starttime="20160512 12:34:12.936"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:12.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:12.938" starttime="20160512 12:34:12.937"></status>
</kw>
<msg timestamp="20160512 12:34:12.938" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"HUAAA1112511":{"sku":"HUAAA1112511","total":"28"}}}</msg>
<status status="PASS" endtime="20160512 12:34:12.938" starttime="20160512 12:34:12.001"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:12.938" starttime="20160512 12:34:11.460"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:12.938" starttime="20160512 12:34:11.458"></status>
</kw>
<kw name="Freebie Checkout - Set Remaining Normal2 Product" library="keywords_checkout">
<arguments>
<arg>20</arg>
</arguments>
<kw name="Adjust Stock Remaining By Inventory ID" library="update_stock">
<arguments>
<arg>${var_freebie_normal2_level_d_inventory}</arg>
<arg>${normal_stock}</arg>
</arguments>
<kw name="Check Stock By Sku" library="update_stock">
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${stock}</var>
</assign>
<kw name="Send Http Get Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>80</arg>
<arg>/api/45311375168544/inventories/${sku}/remaining</arg>
<arg>None</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:12.945" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:12.945" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:12.945" starttime="20160512 12:34:12.944"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:12.946" starttime="20160512 12:34:12.945"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:13.500" starttime="20160512 12:34:12.947"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:13.501" starttime="20160512 12:34:13.501"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:13.502" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"SAAAB1136911":20},"diff":{"SAAAB1136911":20},"stock":{"SAAAB1136911":53},"hold":{"SAAAB1136911":33}}}</msg>
<status status="PASS" endtime="20160512 12:34:13.502" starttime="20160512 12:34:13.502"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:13.504" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:13.504" starttime="20160512 12:34:13.503"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:13.504" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:13.505" starttime="20160512 12:34:13.504"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:13.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:13.506" starttime="20160512 12:34:13.505"></status>
</kw>
<msg timestamp="20160512 12:34:13.506" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"remaining":{"SAAAB1136911":20},"diff":{"SAAAB1136911":20},"stock":{"SAAAB1136911":53},"hold":{"SAAAB1136911":33}}}</msg>
<status status="PASS" endtime="20160512 12:34:13.506" starttime="20160512 12:34:12.943"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${responseJSON}</arg>
<arg>/data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20160512 12:34:13.507" level="INFO">${data} = {"diff": {"SAAAB1136911": 20}, "hold": {"SAAAB1136911": 33}, "remaining": {"SAAAB1136911": 20}, "stock": {"SAAAB1136911": 53}}</msg>
<status status="PASS" endtime="20160512 12:34:13.507" starttime="20160512 12:34:13.506"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20160512 12:34:13.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:13.508" starttime="20160512 12:34:13.508"></status>
</kw>
<msg timestamp="20160512 12:34:13.509" level="INFO">${stock} = {"diff": {"SAAAB1136911": 20}, "hold": {"SAAAB1136911": 33}, "remaining": {"SAAAB1136911": 20}, "stock": {"SAAAB1136911": 53}}</msg>
<status status="PASS" endtime="20160512 12:34:13.509" starttime="20160512 12:34:12.942"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${stock}</arg>
<arg>/hold/${inventory_id}</arg>
</arguments>
<assign>
<var>${hold}</var>
</assign>
<msg timestamp="20160512 12:34:13.510" level="INFO">${hold} = 33</msg>
<status status="PASS" endtime="20160512 12:34:13.510" starttime="20160512 12:34:13.509"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${hold}+${remaining}</arg>
</arguments>
<assign>
<var>${new_total}</var>
</assign>
<msg timestamp="20160512 12:34:13.530" level="INFO">${new_total} = 53</msg>
<status status="PASS" endtime="20160512 12:34:13.530" starttime="20160512 12:34:13.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>[{"sku":"${inventory_id}","total" : "${new_total}","note": "Set Stock by Robot","quantity": "${remaining}"}]</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:13.531" level="INFO">${content} = [{"sku":"SAAAB1136911","total" : "53","note": "Set Stock by Robot","quantity": "20"}]</msg>
<status status="PASS" endtime="20160512 12:34:13.531" starttime="20160512 12:34:13.530"></status>
</kw>
<kw name="Send Http Post Request" library="api_keywords">
<arguments>
<arg>${PCMS_URL_API}</arg>
<arg>${PCMS_PORT}</arg>
<arg>/api/v4/stock/increase</arg>
<arg>${content}</arg>
<arg>Content-type=application/json</arg>
</arguments>
<assign>
<var>${responseJSON}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:13.533" level="INFO">Host for next HTTP request set to 'thor-pcms.itruemart-dev.com:81'</msg>
<msg timestamp="20160512 12:34:13.533" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:13.533" starttime="20160512 12:34:13.533"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:13.534" starttime="20160512 12:34:13.534"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20160512 12:34:13.535" level="INFO">Request body set to "[{"sku":"SAAAB1136911","total" : "53","note": "Set Stock by Robot","quantity": "20"}]".</msg>
<status status="PASS" endtime="20160512 12:34:13.535" starttime="20160512 12:34:13.535"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20160512 12:34:13.536" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20160512 12:34:13.536" starttime="20160512 12:34:13.536"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:14.115" starttime="20160512 12:34:13.537"></status>
</kw>
<kw name="Response Status Code Should Equal" library="HttpLibrary.HTTP">
<doc>Fails if the response status code of the previous request was not the</doc>
<arguments>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:14.117" starttime="20160512 12:34:14.116"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:14.119" level="INFO">${response} = {"status":"success","code":200,"message":"200 OK","data":{"SAAAB1136911":{"sku":"SAAAB1136911","total":"53"}}}</msg>
<status status="PASS" endtime="20160512 12:34:14.119" starttime="20160512 12:34:14.118"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${response_code}</var>
</assign>
<msg timestamp="20160512 12:34:14.120" level="INFO">${response_code} = 200</msg>
<status status="PASS" endtime="20160512 12:34:14.120" starttime="20160512 12:34:14.119"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20160512 12:34:14.121" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160512 12:34:14.121" starttime="20160512 12:34:14.120"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:14.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:14.122" starttime="20160512 12:34:14.121"></status>
</kw>
<msg timestamp="20160512 12:34:14.122" level="INFO">${responseJSON} = {"status":"success","code":200,"message":"200 OK","data":{"SAAAB1136911":{"sku":"SAAAB1136911","total":"53"}}}</msg>
<status status="PASS" endtime="20160512 12:34:14.122" starttime="20160512 12:34:13.531"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:14.122" starttime="20160512 12:34:12.940"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:14.122" starttime="20160512 12:34:12.939"></status>
</kw>
<kw name="User Open Home page" library="keywords_itruemart_common">
<kw name="Open Browser" library="Selenium2Library">
<doc>Opens a new browser instance to given URL.</doc>
<arguments>
<arg>${ITM_URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20160512 12:34:14.126" level="INFO">Opening browser 'Google Chrome' to base url 'http://thor-www.itruemart-dev.com'</msg>
<status status="PASS" endtime="20160512 12:34:23.903" starttime="20160512 12:34:14.126"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:23.904" starttime="20160512 12:34:14.123"></status>
</kw>
<kw name="Freebie Checkout - Rebuild Stock More Than 1Variant" library="keywords_checkout">
<kw name="Go To" library="Selenium2Library">
<doc>Navigates the active browser instance to the provided URL.</doc>
<arguments>
<arg>${ITM_URL}/${PRODUCT-REBUILD-STOCK}?product_pkey=${var_freebie_main_level_d_pkey}&amp;option_pkey[0]=${var_freebie_main_level_d_style1}&amp;debugger=1</arg>
</arguments>
<msg timestamp="20160512 12:34:23.909" level="INFO">Opening url 'http://thor-www.itruemart-dev.com/product/rebuild-stock?product_pkey=2731265257113&amp;option_pkey[0]=21238843494689&amp;debugger=1'</msg>
<status status="PASS" endtime="20160512 12:34:27.376" starttime="20160512 12:34:23.908"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>//pre[@class="-kint"]</arg>
<arg>30s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:27.415" starttime="20160512 12:34:27.377"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:27.416" starttime="20160512 12:34:23.906"></status>
</kw>
<kw name="Check Promotions Freebie On Camp And Delete All By Inventory Id" library="keywords_freebie">
<arguments>
<arg>${var_freebie_normal_same_collectionA}</arg>
</arguments>
<kw name="Check Promotions Freebie On Camp By Inventory Id" library="keywords_freebie">
<arguments>
<arg>${inventory_id}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${CAMP-TOP-LEVEL-DOMAIN}</arg>
<arg>${CAMP-PROTOCOL}</arg>
</arguments>
<msg timestamp="20160512 12:34:27.421" level="INFO">Host for next HTTP request set to 'alpha-campaign-api.wemall-dev.com:8080'</msg>
<msg timestamp="20160512 12:34:27.421" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:27.421" starttime="20160512 12:34:27.420"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:27.422" starttime="20160512 12:34:27.422"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${CAMP-V1-GET-FREEBIE-URI}/?productVariant=${inventory_id}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:28.148" starttime="20160512 12:34:27.423"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:28.149" level="INFO">${response} = [{"variant_id":"HUAAA1112411","promotions":[{"promotion_id":"17201","promotion_name":"Test Promotion Freebie","promotion_name_translation":"","promotion_description":"&lt;p&gt;Test Promotion Freebie Descrip...</msg>
<status status="PASS" endtime="20160512 12:34:28.149" starttime="20160512 12:34:28.148"></status>
</kw>
<msg timestamp="20160512 12:34:28.149" level="INFO">${response} = [{"variant_id":"HUAAA1112411","promotions":[{"promotion_id":"17201","promotion_name":"Test Promotion Freebie","promotion_name_translation":"","promotion_description":"&lt;p&gt;Test Promotion Freebie Descrip...</msg>
<status status="PASS" endtime="20160512 12:34:28.149" starttime="20160512 12:34:27.418"></status>
</kw>
<kw name="Convert Json To Array" library="Freebie">
<arguments>
<arg>${response}</arg>
</arguments>
<assign>
<var>@{arr_response}</var>
</assign>
<msg timestamp="20160512 12:34:28.150" level="INFO">@{arr_response} = [ {u'promotions': [{u'promotion_description_translation': u'', u'options_variant': [], u'promotion_name_translation': u'', u'free_variants': [{u'quantity': 1, u'variant_id': u'PAAAE1111111'}], u'crite...</msg>
<status status="PASS" endtime="20160512 12:34:28.150" starttime="20160512 12:34:28.150"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${arr_response[0]["promotions"]}</arg>
</arguments>
<assign>
<var>${count_promotions}</var>
</assign>
<msg timestamp="20160512 12:34:28.151" level="INFO">Length is 1</msg>
<msg timestamp="20160512 12:34:28.151" level="INFO">${count_promotions} = 1</msg>
<status status="PASS" endtime="20160512 12:34:28.151" starttime="20160512 12:34:28.151"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${count_promotions}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:28.153" starttime="20160512 12:34:28.152"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count_promotions}&gt;0</arg>
<arg>Delete Promotions Freebie On Camp</arg>
<arg>@{arr_response}</arg>
</arguments>
<kw name="Delete Promotions Freebie On Camp" library="keywords_freebie">
<arguments>
<arg>@{arr_response}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${promotions[0]["promotions"]}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20160512 12:34:28.176" level="INFO">Length is 1</msg>
<msg timestamp="20160512 12:34:28.176" level="INFO">${count} = 1</msg>
<status status="PASS" endtime="20160512 12:34:28.176" starttime="20160512 12:34:28.176"></status>
</kw>
<kw type="for" name="${INDEX} IN RANGE [ 0 | ${count} ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${promotions[0]["promotions"][${INDEX}]["promotion_id"]}</arg>
</arguments>
<assign>
<var>${promotion_id}</var>
</assign>
<msg timestamp="20160512 12:34:28.179" level="INFO">${promotion_id} = 17201</msg>
<status status="PASS" endtime="20160512 12:34:28.179" starttime="20160512 12:34:28.178"></status>
</kw>
<kw name="Delete Promotion Freebie On Camp" library="keywords_freebie">
<arguments>
<arg>${promotion_id}</arg>
</arguments>
<kw name="AAD Login And Get Token" library="keywords_aad">
<assign>
<var>${token-data}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${AAD-HOST-API}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:28.185" level="INFO">Host for next HTTP request set to 'alpha-apis-gateway.wemall-dev.com'</msg>
<msg timestamp="20160512 12:34:28.185" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:28.185" starttime="20160512 12:34:28.184"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${AAD-HEADER}</arg>
</arguments>
<msg timestamp="20160512 12:34:28.186" level="INFO">Set request header "Content-Type" to "application/x-www-form-urlencoded"</msg>
<status status="PASS" endtime="20160512 12:34:28.186" starttime="20160512 12:34:28.185"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Authorization</arg>
<arg>Basic dGVzdDpwYXNzd29yZA==</arg>
</arguments>
<msg timestamp="20160512 12:34:28.187" level="INFO">Set request header "Authorization" to "Basic dGVzdDpwYXNzd29yZA=="</msg>
<status status="PASS" endtime="20160512 12:34:28.187" starttime="20160512 12:34:28.187"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:28.189" starttime="20160512 12:34:28.189"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${AAD-LOGIN-URI}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:28.306" starttime="20160512 12:34:28.190"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20160512 12:34:28.307" level="INFO">${body} = </msg>
<status status="PASS" endtime="20160512 12:34:28.307" starttime="20160512 12:34:28.307"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${AAD-HEADER}</arg>
</arguments>
<msg timestamp="20160512 12:34:28.308" level="INFO">Set request header "Content-Type" to "application/x-www-form-urlencoded"</msg>
<status status="PASS" endtime="20160512 12:34:28.308" starttime="20160512 12:34:28.308"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Authorization</arg>
<arg>Basic dGVzdDpwYXNzd29yZA==</arg>
</arguments>
<msg timestamp="20160512 12:34:28.309" level="INFO">Set request header "Authorization" to "Basic dGVzdDpwYXNzd29yZA=="</msg>
<status status="PASS" endtime="20160512 12:34:28.309" starttime="20160512 12:34:28.309"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/authen/v1/tokens?grant_type=merchant</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:28.394" starttime="20160512 12:34:28.310"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20160512 12:34:28.395" level="INFO">${body} = {"refresh_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Njh9.0kZS4NKhu2MhP--xYozQsqzWqVAR5aFU8sIwNr3Smlqgx1gRdLTBT7Or25eg6r6Vr2Ko-NqJRLn_EWS42g1cOFdP...</msg>
<status status="PASS" endtime="20160512 12:34:28.395" starttime="20160512 12:34:28.395"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body}</arg>
<arg>/refresh_token</arg>
</arguments>
<assign>
<var>${refresh-token}</var>
</assign>
<msg timestamp="20160512 12:34:28.397" level="INFO">${refresh-token} = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Njh9.0kZS4NKhu2MhP--xYozQsqzWqVAR5aFU8sIwNr3Smlqgx1gRdLTBT7Or25eg6r6Vr2Ko-NqJRLn_EWS42g1cOFdP5Yxh4Ys6ntN0soWif...</msg>
<status status="PASS" endtime="20160512 12:34:28.397" starttime="20160512 12:34:28.396"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body}</arg>
<arg>/access_token</arg>
</arguments>
<assign>
<var>${access-token}</var>
</assign>
<msg timestamp="20160512 12:34:28.398" level="INFO">${access-token} = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNjh9.BPo-_fGAspyLEfydPf3EfKEOSDikgyVQ9v5CsPg_6vUJZoajpk_xa-lMmBehRgDMxhnHYeQC2qmW6...</msg>
<status status="PASS" endtime="20160512 12:34:28.399" starttime="20160512 12:34:28.398"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${refresh-token}</arg>
<arg>"</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${refresh-token}</var>
</assign>
<msg timestamp="20160512 12:34:28.400" level="INFO">${refresh-token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Njh9.0kZS4NKhu2MhP--xYozQsqzWqVAR5aFU8sIwNr3Smlqgx1gRdLTBT7Or25eg6r6Vr2Ko-NqJRLn_EWS42g1cOFdP5Yxh4Ys6ntN0soWif-...</msg>
<status status="PASS" endtime="20160512 12:34:28.400" starttime="20160512 12:34:28.399"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${access-token}</arg>
<arg>"</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${access-token}</var>
</assign>
<msg timestamp="20160512 12:34:28.401" level="INFO">${access-token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNjh9.BPo-_fGAspyLEfydPf3EfKEOSDikgyVQ9v5CsPg_6vUJZoajpk_xa-lMmBehRgDMxhnHYeQC2qmW6P...</msg>
<status status="PASS" endtime="20160512 12:34:28.401" starttime="20160512 12:34:28.400"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>refresh_token=${refresh-token}</arg>
<arg>access_token=${access-token}</arg>
</arguments>
<assign>
<var>${dict}</var>
</assign>
<msg timestamp="20160512 12:34:28.402" level="INFO">${dict} = {u'refresh_token': u'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Njh9.0kZS4NKhu2MhP--xYozQsqzWqVAR5aFU8sIwNr3Smlqgx1gRdLTBT7Or25eg6r6Vr2Ko-NqJRLn_EWS42g1cO...</msg>
<status status="PASS" endtime="20160512 12:34:28.402" starttime="20160512 12:34:28.401"></status>
</kw>
<msg timestamp="20160512 12:34:28.402" level="INFO">${token-data} = {u'refresh_token': u'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Njh9.0kZS4NKhu2MhP--xYozQsqzWqVAR5aFU8sIwNr3Smlqgx1gRdLTBT7Or25eg6r6Vr2Ko-NqJRLn_EWS42g1cO...</msg>
<status status="PASS" endtime="20160512 12:34:28.402" starttime="20160512 12:34:28.182"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${token-data}</arg>
<arg>refresh_token</arg>
</arguments>
<assign>
<var>${refresh-token}</var>
</assign>
<msg timestamp="20160512 12:34:28.403" level="INFO">${refresh-token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Njh9.0kZS4NKhu2MhP--xYozQsqzWqVAR5aFU8sIwNr3Smlqgx1gRdLTBT7Or25eg6r6Vr2Ko-NqJRLn_EWS42g1cOFdP5Yxh4Ys6ntN0soWif-...</msg>
<status status="PASS" endtime="20160512 12:34:28.403" starttime="20160512 12:34:28.403"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${token-data}</arg>
<arg>access_token</arg>
</arguments>
<assign>
<var>${access-token}</var>
</assign>
<msg timestamp="20160512 12:34:28.404" level="INFO">${access-token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNjh9.BPo-_fGAspyLEfydPf3EfKEOSDikgyVQ9v5CsPg_6vUJZoajpk_xa-lMmBehRgDMxhnHYeQC2qmW6P...</msg>
<status status="PASS" endtime="20160512 12:34:28.404" starttime="20160512 12:34:28.404"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${CAMP-V1-LEVEL-DOMAIN}</arg>
<arg>${CAMP-PROTOCOL}</arg>
</arguments>
<msg timestamp="20160512 12:34:28.405" level="INFO">Host for next HTTP request set to 'alpha-apis-gateway.wemall-dev.com'</msg>
<msg timestamp="20160512 12:34:28.405" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:28.406" starttime="20160512 12:34:28.405"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20160512 12:34:28.407" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20160512 12:34:28.407" starttime="20160512 12:34:28.407"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>x-wm-accessToken</arg>
<arg>${access-token}</arg>
</arguments>
<msg timestamp="20160512 12:34:28.409" level="INFO">Set request header "x-wm-accessToken" to "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNjh9.BPo-_fGAspyLEfydPf3EfKEOSDikgyVQ9v5CsPg_6vUJZoajpk_xa-lMmBehRgDMxhnHYeQC2qmW6PN-jY55tT-u91tA3ncTE_1bGVOAMuU9RuyL5mDYjdVrjqFYbMg0eJ-KlMYoCZp9VMrCriLHIRfrjvu4ptbAMJp76bzbvZg"</msg>
<status status="PASS" endtime="20160512 12:34:28.409" starttime="20160512 12:34:28.409"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>x-wm-refreshToken</arg>
<arg>${refresh-token}</arg>
</arguments>
<msg timestamp="20160512 12:34:28.410" level="INFO">Set request header "x-wm-refreshToken" to "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Njh9.0kZS4NKhu2MhP--xYozQsqzWqVAR5aFU8sIwNr3Smlqgx1gRdLTBT7Or25eg6r6Vr2Ko-NqJRLn_EWS42g1cOFdP5Yxh4Ys6ntN0soWif-FIEwS2bdxBUcQ4oNUhVaEMJbd2XHq1rW2ku443-yWcMH4cNmGMUowxse7pA298gXM"</msg>
<status status="PASS" endtime="20160512 12:34:28.411" starttime="20160512 12:34:28.410"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:28.411" starttime="20160512 12:34:28.411"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${CAMP-V1-CREATE-FREEBIE-URI}/${promotion_id}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:28.540" starttime="20160512 12:34:28.412"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${CAMP-V1-LEVEL-DOMAIN}</arg>
<arg>${CAMP-PROTOCOL}</arg>
</arguments>
<msg timestamp="20160512 12:34:28.542" level="INFO">Host for next HTTP request set to 'alpha-apis-gateway.wemall-dev.com'</msg>
<msg timestamp="20160512 12:34:28.542" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:28.542" starttime="20160512 12:34:28.541"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20160512 12:34:28.544" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20160512 12:34:28.544" starttime="20160512 12:34:28.544"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>x-wm-accessToken</arg>
<arg>${access-token}</arg>
</arguments>
<msg timestamp="20160512 12:34:28.547" level="INFO">Set request header "x-wm-accessToken" to "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNjh9.BPo-_fGAspyLEfydPf3EfKEOSDikgyVQ9v5CsPg_6vUJZoajpk_xa-lMmBehRgDMxhnHYeQC2qmW6PN-jY55tT-u91tA3ncTE_1bGVOAMuU9RuyL5mDYjdVrjqFYbMg0eJ-KlMYoCZp9VMrCriLHIRfrjvu4ptbAMJp76bzbvZg"</msg>
<status status="PASS" endtime="20160512 12:34:28.547" starttime="20160512 12:34:28.546"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>x-wm-refreshToken</arg>
<arg>${refresh-token}</arg>
</arguments>
<msg timestamp="20160512 12:34:28.548" level="INFO">Set request header "x-wm-refreshToken" to "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Njh9.0kZS4NKhu2MhP--xYozQsqzWqVAR5aFU8sIwNr3Smlqgx1gRdLTBT7Or25eg6r6Vr2Ko-NqJRLn_EWS42g1cOFdP5Yxh4Ys6ntN0soWif-FIEwS2bdxBUcQ4oNUhVaEMJbd2XHq1rW2ku443-yWcMH4cNmGMUowxse7pA298gXM"</msg>
<status status="PASS" endtime="20160512 12:34:28.549" starttime="20160512 12:34:28.548"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:28.551" starttime="20160512 12:34:28.550"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${CAMP-V1-BUILD-FREEBIE-URI}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:36.786" starttime="20160512 12:34:28.552"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>delete_promotion_success=${promotion_id}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:36.787" starttime="20160512 12:34:36.787"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:36.787" starttime="20160512 12:34:28.180"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:36.787" starttime="20160512 12:34:28.177"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:36.787" starttime="20160512 12:34:28.176"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:36.787" starttime="20160512 12:34:28.174"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:36.788" starttime="20160512 12:34:28.153"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:36.788" starttime="20160512 12:34:27.417"></status>
</kw>
<kw name="Freebie Checkout - Set Freebie On Camp" library="keywords_checkout">
<arguments>
<arg>2</arg>
<arg>1</arg>
</arguments>
<kw name="Convert Date To Time Stamp" library="keywords_freebie">
<arguments>
<arg>-30</arg>
</arguments>
<assign>
<var>${start_timestamp}</var>
</assign>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20160512 12:34:36.791" level="INFO">${now} = 2016-05-12 12:34:36</msg>
<status status="PASS" endtime="20160512 12:34:36.791" starttime="20160512 12:34:36.791"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${now}</arg>
<arg>${add_date} days</arg>
</arguments>
<assign>
<var>${new-date}</var>
</assign>
<msg timestamp="20160512 12:34:36.797" level="INFO">${new-date} = 2016-04-12 12:34:36.000</msg>
<status status="PASS" endtime="20160512 12:34:36.797" starttime="20160512 12:34:36.792"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${new-date}</arg>
<arg>epoch</arg>
</arguments>
<assign>
<var>${epoch}</var>
</assign>
<msg timestamp="20160512 12:34:36.799" level="INFO">${epoch} = 1460439276.0</msg>
<status status="PASS" endtime="20160512 12:34:36.799" starttime="20160512 12:34:36.798"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${epoch}</arg>
</arguments>
<assign>
<var>${int-epoch}</var>
</assign>
<msg timestamp="20160512 12:34:36.800" level="INFO">${int-epoch} = 1460439276</msg>
<status status="PASS" endtime="20160512 12:34:36.800" starttime="20160512 12:34:36.799"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${int-epoch}*1000</arg>
</arguments>
<assign>
<var>${int-timestamp}</var>
</assign>
<msg timestamp="20160512 12:34:36.819" level="INFO">${int-timestamp} = 1460439276000</msg>
<status status="PASS" endtime="20160512 12:34:36.819" starttime="20160512 12:34:36.800"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${int-timestamp}</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20160512 12:34:36.820" level="INFO">${timestamp} = 1460439276000</msg>
<status status="PASS" endtime="20160512 12:34:36.820" starttime="20160512 12:34:36.820"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${timestamp}</arg>
</arguments>
<msg timestamp="20160512 12:34:36.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:36.821" starttime="20160512 12:34:36.821"></status>
</kw>
<msg timestamp="20160512 12:34:36.821" level="INFO">${start_timestamp} = 1460439276000</msg>
<status status="PASS" endtime="20160512 12:34:36.821" starttime="20160512 12:34:36.790"></status>
</kw>
<kw name="Convert Date To Time Stamp" library="keywords_freebie">
<arguments>
<arg>60</arg>
</arguments>
<assign>
<var>${end_timestamp}</var>
</assign>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20160512 12:34:36.825" level="INFO">${now} = 2016-05-12 12:34:36</msg>
<status status="PASS" endtime="20160512 12:34:36.825" starttime="20160512 12:34:36.825"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${now}</arg>
<arg>${add_date} days</arg>
</arguments>
<assign>
<var>${new-date}</var>
</assign>
<msg timestamp="20160512 12:34:36.827" level="INFO">${new-date} = 2016-07-11 12:34:36.000</msg>
<status status="PASS" endtime="20160512 12:34:36.827" starttime="20160512 12:34:36.826"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${new-date}</arg>
<arg>epoch</arg>
</arguments>
<assign>
<var>${epoch}</var>
</assign>
<msg timestamp="20160512 12:34:36.828" level="INFO">${epoch} = 1468215276.0</msg>
<status status="PASS" endtime="20160512 12:34:36.828" starttime="20160512 12:34:36.828"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${epoch}</arg>
</arguments>
<assign>
<var>${int-epoch}</var>
</assign>
<msg timestamp="20160512 12:34:36.830" level="INFO">${int-epoch} = 1468215276</msg>
<status status="PASS" endtime="20160512 12:34:36.830" starttime="20160512 12:34:36.830"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${int-epoch}*1000</arg>
</arguments>
<assign>
<var>${int-timestamp}</var>
</assign>
<msg timestamp="20160512 12:34:36.852" level="INFO">${int-timestamp} = 1468215276000</msg>
<status status="PASS" endtime="20160512 12:34:36.852" starttime="20160512 12:34:36.831"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${int-timestamp}</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20160512 12:34:36.854" level="INFO">${timestamp} = 1468215276000</msg>
<status status="PASS" endtime="20160512 12:34:36.854" starttime="20160512 12:34:36.853"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${timestamp}</arg>
</arguments>
<msg timestamp="20160512 12:34:36.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:36.856" starttime="20160512 12:34:36.856"></status>
</kw>
<msg timestamp="20160512 12:34:36.857" level="INFO">${end_timestamp} = 1468215276000</msg>
<status status="PASS" endtime="20160512 12:34:36.857" starttime="20160512 12:34:36.823"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>/Users/Benz/Documents/Ascend Work/robot_itruemart_thai/Keyword/Features/Freebie/../../../Resource/json/Freebie/camp_json_1main_1free.json</arg>
</arguments>
<assign>
<var>${path_json}</var>
</assign>
<msg timestamp="20160512 12:34:36.858" level="INFO">${path_json} = /Users/Benz/Documents/Ascend Work/robot_itruemart_thai/Keyword/Features/Freebie/../../../Resource/json/Freebie/camp_json_1main_1free.json</msg>
<status status="PASS" endtime="20160512 12:34:36.858" starttime="20160512 12:34:36.858"></status>
</kw>
<kw name="Create Promotion Freebie On Camp" library="keywords_freebie">
<arguments>
<arg>${var_freebie_main_level_d_inventory}</arg>
<arg>${quantity_main}</arg>
<arg>${var_freebie_free_level_d_inventory}</arg>
<arg>${quantity_free}</arg>
<arg>None</arg>
<arg>None</arg>
<arg>None</arg>
<arg>None</arg>
<arg>None</arg>
<arg>None</arg>
<arg>None</arg>
<arg>${path_json}</arg>
<arg>${FREEBIE-CAMPAIGN-ID}</arg>
<arg>${start_timestamp}</arg>
<arg>${end_timestamp}</arg>
</arguments>
<assign>
<var>${response_camp}</var>
</assign>
<kw name="AAD Login And Get Token" library="keywords_aad">
<assign>
<var>${token-data}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${AAD-HOST-API}</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20160512 12:34:36.863" level="INFO">Host for next HTTP request set to 'alpha-apis-gateway.wemall-dev.com'</msg>
<msg timestamp="20160512 12:34:36.863" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:36.863" starttime="20160512 12:34:36.863"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${AAD-HEADER}</arg>
</arguments>
<msg timestamp="20160512 12:34:36.864" level="INFO">Set request header "Content-Type" to "application/x-www-form-urlencoded"</msg>
<status status="PASS" endtime="20160512 12:34:36.864" starttime="20160512 12:34:36.864"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Authorization</arg>
<arg>Basic dGVzdDpwYXNzd29yZA==</arg>
</arguments>
<msg timestamp="20160512 12:34:36.865" level="INFO">Set request header "Authorization" to "Basic dGVzdDpwYXNzd29yZA=="</msg>
<status status="PASS" endtime="20160512 12:34:36.865" starttime="20160512 12:34:36.865"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:36.867" starttime="20160512 12:34:36.867"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${AAD-LOGIN-URI}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:36.943" starttime="20160512 12:34:36.868"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20160512 12:34:36.944" level="INFO">${body} = </msg>
<status status="PASS" endtime="20160512 12:34:36.944" starttime="20160512 12:34:36.944"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${AAD-HEADER}</arg>
</arguments>
<msg timestamp="20160512 12:34:36.946" level="INFO">Set request header "Content-Type" to "application/x-www-form-urlencoded"</msg>
<status status="PASS" endtime="20160512 12:34:36.946" starttime="20160512 12:34:36.945"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Authorization</arg>
<arg>Basic dGVzdDpwYXNzd29yZA==</arg>
</arguments>
<msg timestamp="20160512 12:34:36.947" level="INFO">Set request header "Authorization" to "Basic dGVzdDpwYXNzd29yZA=="</msg>
<status status="PASS" endtime="20160512 12:34:36.947" starttime="20160512 12:34:36.946"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/authen/v1/tokens?grant_type=merchant</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.031" starttime="20160512 12:34:36.948"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20160512 12:34:37.033" level="INFO">${body} = {"refresh_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Nzd9.Nfj7gFzo08d8JAw7hU7PF-3AeCWFPmKhv8j-_hqpWEPkxpLURH3DNIoc4M0aIAAcrTnsL8CTogiBh1lIZha5LKnE...</msg>
<status status="PASS" endtime="20160512 12:34:37.033" starttime="20160512 12:34:37.032"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body}</arg>
<arg>/refresh_token</arg>
</arguments>
<assign>
<var>${refresh-token}</var>
</assign>
<msg timestamp="20160512 12:34:37.034" level="INFO">${refresh-token} = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Nzd9.Nfj7gFzo08d8JAw7hU7PF-3AeCWFPmKhv8j-_hqpWEPkxpLURH3DNIoc4M0aIAAcrTnsL8CTogiBh1lIZha5LKnE81Ak6kId-jRkvl56p...</msg>
<status status="PASS" endtime="20160512 12:34:37.034" starttime="20160512 12:34:37.034"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body}</arg>
<arg>/access_token</arg>
</arguments>
<assign>
<var>${access-token}</var>
</assign>
<msg timestamp="20160512 12:34:37.036" level="INFO">${access-token} = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNzd9.fvz37TxK8BMK2Ojo2JDdQTpPn5g2RXy-ql1Syj_iy3mWEyHXNG36ypDUqYTsSLDw-JJQbEfsQXcUO...</msg>
<status status="PASS" endtime="20160512 12:34:37.036" starttime="20160512 12:34:37.035"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${refresh-token}</arg>
<arg>"</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${refresh-token}</var>
</assign>
<msg timestamp="20160512 12:34:37.037" level="INFO">${refresh-token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Nzd9.Nfj7gFzo08d8JAw7hU7PF-3AeCWFPmKhv8j-_hqpWEPkxpLURH3DNIoc4M0aIAAcrTnsL8CTogiBh1lIZha5LKnE81Ak6kId-jRkvl56pl...</msg>
<status status="PASS" endtime="20160512 12:34:37.037" starttime="20160512 12:34:37.036"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${access-token}</arg>
<arg>"</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${access-token}</var>
</assign>
<msg timestamp="20160512 12:34:37.038" level="INFO">${access-token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNzd9.fvz37TxK8BMK2Ojo2JDdQTpPn5g2RXy-ql1Syj_iy3mWEyHXNG36ypDUqYTsSLDw-JJQbEfsQXcUOM...</msg>
<status status="PASS" endtime="20160512 12:34:37.038" starttime="20160512 12:34:37.038"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>refresh_token=${refresh-token}</arg>
<arg>access_token=${access-token}</arg>
</arguments>
<assign>
<var>${dict}</var>
</assign>
<msg timestamp="20160512 12:34:37.039" level="INFO">${dict} = {u'refresh_token': u'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Nzd9.Nfj7gFzo08d8JAw7hU7PF-3AeCWFPmKhv8j-_hqpWEPkxpLURH3DNIoc4M0aIAAcrTnsL8CTogiBh1lIZha5L...</msg>
<status status="PASS" endtime="20160512 12:34:37.039" starttime="20160512 12:34:37.039"></status>
</kw>
<msg timestamp="20160512 12:34:37.040" level="INFO">${token-data} = {u'refresh_token': u'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Nzd9.Nfj7gFzo08d8JAw7hU7PF-3AeCWFPmKhv8j-_hqpWEPkxpLURH3DNIoc4M0aIAAcrTnsL8CTogiBh1lIZha5L...</msg>
<status status="PASS" endtime="20160512 12:34:37.040" starttime="20160512 12:34:36.862"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${token-data}</arg>
<arg>refresh_token</arg>
</arguments>
<assign>
<var>${refresh-token}</var>
</assign>
<msg timestamp="20160512 12:34:37.041" level="INFO">${refresh-token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Nzd9.Nfj7gFzo08d8JAw7hU7PF-3AeCWFPmKhv8j-_hqpWEPkxpLURH3DNIoc4M0aIAAcrTnsL8CTogiBh1lIZha5LKnE81Ak6kId-jRkvl56pl...</msg>
<status status="PASS" endtime="20160512 12:34:37.041" starttime="20160512 12:34:37.040"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${token-data}</arg>
<arg>access_token</arg>
</arguments>
<assign>
<var>${access-token}</var>
</assign>
<msg timestamp="20160512 12:34:37.042" level="INFO">${access-token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNzd9.fvz37TxK8BMK2Ojo2JDdQTpPn5g2RXy-ql1Syj_iy3mWEyHXNG36ypDUqYTsSLDw-JJQbEfsQXcUOM...</msg>
<status status="PASS" endtime="20160512 12:34:37.042" starttime="20160512 12:34:37.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${criteria_values1}' == 'None'</arg>
<arg>Return From Keyword</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.065" starttime="20160512 12:34:37.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${variant_id1}' == 'None'</arg>
<arg>Return From Keyword</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.086" starttime="20160512 12:34:37.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quantity_free1}' == 'None'</arg>
<arg>Return From Keyword</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.107" starttime="20160512 12:34:37.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quantity_main}' == 'None'</arg>
<arg>Return From Keyword</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.129" starttime="20160512 12:34:37.108"></status>
</kw>
<kw name="Convert Date To Time Stamp" library="keywords_freebie">
<arguments>
<arg>-1</arg>
</arguments>
<assign>
<var>${start}</var>
</assign>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20160512 12:34:37.132" level="INFO">${now} = 2016-05-12 12:34:37</msg>
<status status="PASS" endtime="20160512 12:34:37.132" starttime="20160512 12:34:37.131"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${now}</arg>
<arg>${add_date} days</arg>
</arguments>
<assign>
<var>${new-date}</var>
</assign>
<msg timestamp="20160512 12:34:37.133" level="INFO">${new-date} = 2016-05-11 12:34:37.000</msg>
<status status="PASS" endtime="20160512 12:34:37.133" starttime="20160512 12:34:37.132"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${new-date}</arg>
<arg>epoch</arg>
</arguments>
<assign>
<var>${epoch}</var>
</assign>
<msg timestamp="20160512 12:34:37.135" level="INFO">${epoch} = 1462944877.0</msg>
<status status="PASS" endtime="20160512 12:34:37.135" starttime="20160512 12:34:37.134"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${epoch}</arg>
</arguments>
<assign>
<var>${int-epoch}</var>
</assign>
<msg timestamp="20160512 12:34:37.136" level="INFO">${int-epoch} = 1462944877</msg>
<status status="PASS" endtime="20160512 12:34:37.136" starttime="20160512 12:34:37.136"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${int-epoch}*1000</arg>
</arguments>
<assign>
<var>${int-timestamp}</var>
</assign>
<msg timestamp="20160512 12:34:37.158" level="INFO">${int-timestamp} = 1462944877000</msg>
<status status="PASS" endtime="20160512 12:34:37.158" starttime="20160512 12:34:37.137"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${int-timestamp}</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20160512 12:34:37.159" level="INFO">${timestamp} = 1462944877000</msg>
<status status="PASS" endtime="20160512 12:34:37.159" starttime="20160512 12:34:37.159"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${timestamp}</arg>
</arguments>
<msg timestamp="20160512 12:34:37.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:37.160" starttime="20160512 12:34:37.160"></status>
</kw>
<msg timestamp="20160512 12:34:37.160" level="INFO">${start} = 1462944877000</msg>
<status status="PASS" endtime="20160512 12:34:37.160" starttime="20160512 12:34:37.129"></status>
</kw>
<kw name="Convert Date To Time Stamp" library="keywords_freebie">
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${end}</var>
</assign>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20160512 12:34:37.163" level="INFO">${now} = 2016-05-12 12:34:37</msg>
<status status="PASS" endtime="20160512 12:34:37.163" starttime="20160512 12:34:37.162"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${now}</arg>
<arg>${add_date} days</arg>
</arguments>
<assign>
<var>${new-date}</var>
</assign>
<msg timestamp="20160512 12:34:37.164" level="INFO">${new-date} = 2016-06-11 12:34:37.000</msg>
<status status="PASS" endtime="20160512 12:34:37.164" starttime="20160512 12:34:37.163"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${new-date}</arg>
<arg>epoch</arg>
</arguments>
<assign>
<var>${epoch}</var>
</assign>
<msg timestamp="20160512 12:34:37.165" level="INFO">${epoch} = 1465623277.0</msg>
<status status="PASS" endtime="20160512 12:34:37.165" starttime="20160512 12:34:37.165"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${epoch}</arg>
</arguments>
<assign>
<var>${int-epoch}</var>
</assign>
<msg timestamp="20160512 12:34:37.167" level="INFO">${int-epoch} = 1465623277</msg>
<status status="PASS" endtime="20160512 12:34:37.167" starttime="20160512 12:34:37.166"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${int-epoch}*1000</arg>
</arguments>
<assign>
<var>${int-timestamp}</var>
</assign>
<msg timestamp="20160512 12:34:37.193" level="INFO">${int-timestamp} = 1465623277000</msg>
<status status="PASS" endtime="20160512 12:34:37.193" starttime="20160512 12:34:37.168"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${int-timestamp}</arg>
</arguments>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20160512 12:34:37.194" level="INFO">${timestamp} = 1465623277000</msg>
<status status="PASS" endtime="20160512 12:34:37.194" starttime="20160512 12:34:37.194"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${timestamp}</arg>
</arguments>
<msg timestamp="20160512 12:34:37.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:37.195" starttime="20160512 12:34:37.195"></status>
</kw>
<msg timestamp="20160512 12:34:37.195" level="INFO">${end} = 1465623277000</msg>
<status status="PASS" endtime="20160512 12:34:37.195" starttime="20160512 12:34:37.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${campaign_id}' == 'None'</arg>
<arg>Convert To String</arg>
<arg>${FREEBIE-CAMPAIGN-ID}</arg>
<arg>ELSE</arg>
<arg>Convert To String</arg>
<arg>${campaign_id}</arg>
</arguments>
<assign>
<var>${campaign_id}</var>
</assign>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${campaign_id}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.221" starttime="20160512 12:34:37.221"></status>
</kw>
<msg timestamp="20160512 12:34:37.222" level="INFO">${campaign_id} = 5709</msg>
<status status="PASS" endtime="20160512 12:34:37.222" starttime="20160512 12:34:37.196"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${start_period}' == 'None'</arg>
<arg>Convert To String</arg>
<arg>${start}</arg>
<arg>ELSE</arg>
<arg>Convert To String</arg>
<arg>${start_period}</arg>
</arguments>
<assign>
<var>${start_period}</var>
</assign>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${start_period}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.245" starttime="20160512 12:34:37.244"></status>
</kw>
<msg timestamp="20160512 12:34:37.245" level="INFO">${start_period} = 1460439276000</msg>
<status status="PASS" endtime="20160512 12:34:37.245" starttime="20160512 12:34:37.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${end_period}' == 'None'</arg>
<arg>Convert To String</arg>
<arg>${end}</arg>
<arg>ELSE</arg>
<arg>Convert To String</arg>
<arg>${end_period}</arg>
</arguments>
<assign>
<var>${end_period}</var>
</assign>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${end_period}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.268" starttime="20160512 12:34:37.267"></status>
</kw>
<msg timestamp="20160512 12:34:37.268" level="INFO">${end_period} = 1468215276000</msg>
<status status="PASS" endtime="20160512 12:34:37.268" starttime="20160512 12:34:37.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${repeat}' == 'None'</arg>
<arg>Convert To String</arg>
<arg>5</arg>
<arg>ELSE</arg>
<arg>Convert To String</arg>
<arg>${repeat}</arg>
</arguments>
<assign>
<var>${repeat}</var>
</assign>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.291" starttime="20160512 12:34:37.291"></status>
</kw>
<msg timestamp="20160512 12:34:37.292" level="INFO">${repeat} = 5</msg>
<status status="PASS" endtime="20160512 12:34:37.292" starttime="20160512 12:34:37.269"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${path_json}</arg>
<arg>utf-8</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.293" html="yes" level="INFO">Getting file '&lt;a href="file:///Users/Benz/Documents/Ascend Work/robot_itruemart_thai/Resource/json/Freebie/camp_json_1main_1free.json"&gt;/Users/Benz/Documents/Ascend Work/robot_itruemart_thai/Resource/json/Freebie/camp_json_1main_1free.json&lt;/a&gt;'.</msg>
<msg timestamp="20160512 12:34:37.295" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.295" starttime="20160512 12:34:37.292"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^criteria_values1^^</arg>
<arg>${criteria_values1}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.296" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.296" starttime="20160512 12:34:37.296"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^criteria_values2^^</arg>
<arg>${criteria_values2}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.297" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.297" starttime="20160512 12:34:37.297"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^criteria_values3^^</arg>
<arg>${criteria_values3}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.298" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.298" starttime="20160512 12:34:37.298"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^quantity_main^^</arg>
<arg>${quantity_main}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.299" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.299" starttime="20160512 12:34:37.299"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^variant_id1^^</arg>
<arg>${variant_id1}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.300" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.300" starttime="20160512 12:34:37.300"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^variant_id2^^</arg>
<arg>${variant_id2}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.301" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.302" starttime="20160512 12:34:37.301"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^variant_id3^^</arg>
<arg>${variant_id3}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.303" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.303" starttime="20160512 12:34:37.302"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^quantity_free1^^</arg>
<arg>${quantity_free1}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.304" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.304" starttime="20160512 12:34:37.304"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^quantity_free2^^</arg>
<arg>${quantity_free2}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.306" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.306" starttime="20160512 12:34:37.305"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^quantity_free3^^</arg>
<arg>${quantity_free3}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.307" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.307" starttime="20160512 12:34:37.306"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^note^^</arg>
<arg>${note}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.308" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.308" starttime="20160512 12:34:37.308"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^campaign_id^^</arg>
<arg>${campaign_id}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.309" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.309" starttime="20160512 12:34:37.309"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^start_period^^</arg>
<arg>${start_period}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.311" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.311" starttime="20160512 12:34:37.310"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^end_period^^</arg>
<arg>${end_period}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.312" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.312" starttime="20160512 12:34:37.311"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^enable^^</arg>
<arg>${enable}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.313" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.313" starttime="20160512 12:34:37.312"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${content}</arg>
<arg>^^repeat^^</arg>
<arg>${repeat}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20160512 12:34:37.314" level="INFO">${content} = {
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion ...</msg>
<status status="PASS" endtime="20160512 12:34:37.314" starttime="20160512 12:34:37.314"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${CAMP-V1-LEVEL-DOMAIN}</arg>
<arg>${CAMP-PROTOCOL}</arg>
</arguments>
<msg timestamp="20160512 12:34:37.315" level="INFO">Host for next HTTP request set to 'alpha-apis-gateway.wemall-dev.com'</msg>
<msg timestamp="20160512 12:34:37.315" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:37.315" starttime="20160512 12:34:37.315"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20160512 12:34:37.317" level="INFO">Set request header "Content-type" to "application/json"</msg>
<status status="PASS" endtime="20160512 12:34:37.317" starttime="20160512 12:34:37.317"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>x-wm-accesstoken</arg>
<arg>${access-token}</arg>
</arguments>
<msg timestamp="20160512 12:34:37.318" level="INFO">Set request header "x-wm-accesstoken" to "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNzd9.fvz37TxK8BMK2Ojo2JDdQTpPn5g2RXy-ql1Syj_iy3mWEyHXNG36ypDUqYTsSLDw-JJQbEfsQXcUOMecyIsniDqp7N4yfzD5L71eJhlMn0532RqhGTYoqN3YiLLy-TpKfO0tfBgK5wMrvmsz-WcX0gSLovaJSAO_CV6Qfa2F0zw"</msg>
<status status="PASS" endtime="20160512 12:34:37.318" starttime="20160512 12:34:37.318"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>x-wm-refreshtoken</arg>
<arg>${refresh-token}</arg>
</arguments>
<msg timestamp="20160512 12:34:37.319" level="INFO">Set request header "x-wm-refreshtoken" to "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Nzd9.Nfj7gFzo08d8JAw7hU7PF-3AeCWFPmKhv8j-_hqpWEPkxpLURH3DNIoc4M0aIAAcrTnsL8CTogiBh1lIZha5LKnE81Ak6kId-jRkvl56plv6UC5BXRFD249JwAcZhFw5ISwBvFOVjOmTro421HfJPSvRlHyfRTo-8bCrvV-KbGk"</msg>
<status status="PASS" endtime="20160512 12:34:37.319" starttime="20160512 12:34:37.319"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20160512 12:34:37.321" level="INFO">Request body set to "{
  "name_local": "Test Promotion Freebie",
  "name_en": "",
  "description_local": "&lt;p&gt;Test Promotion Freebie Description&lt;/p&gt;\n",
  "description_en": "",
  "short_description_local": "Test Promotion Freebie short note",
  "short_description_en": "",
  "start_period": 1460439276000,
  "end_period": 1468215276000,
  "enable": true,
  "member": true,
  "non_member": true,
  "app_ids": "true",
  "channel_type": "1",
  "merchant_ids": "itruemart",
  "type": "itm-freebie",
  "img_web": null,
  "img_web_translation": null,
  "img_mobile": null,
  "img_mobile_translation": null,
  "campaign": {
    "id": 5709
  },
  "condition_data": {
    "criteria_type": "variant",
    "criteria_values": [
       "HUAAA1112411"
    ],
    "free_variants_selectable": false,
    "freebie_conditions": [
      {
        "variant_id": "PAAAE1111111",
        "quantity": "1"
      }
    ],
    "quantity": "2"
  },
  "detail_data": {
    "img_web": "//alpha-cdn.wemall-dev.com/th/cmp/images/400x400.jpg?v=5ba7d1fb",
    "img_web_translation": "//alpha-cdn.wemall-dev.com/th/cmp/images/400x400.jpg?v=5ba7d1fb",
    "img_mobile": "//alpha-cdn.wemall-dev.com/th/cmp/images/7073_598866853557751_8530349431314153996_n.jpg?v=78f0fbfc",
    "img_mobile_translation": "//alpha-cdn.wemall-dev.com/th/cmp/images/7073_598866853557751_8530349431314153996_n.jpg?v=78f0fbfc",
    "thumb_web": "//alpha-cdn.wemall-dev.com/th/cmp/images/40x40.jpg?v=cff87fbf",
    "thumb_mobile": "//alpha-cdn.wemall-dev.com/th/cmp/images/40x40.jpg?v=cff87fbf",
    "thumb_web_translation": "//alpha-cdn.wemall-dev.com/th/cmp/images/40x40.jpg?v=cff87fbf",
    "thumb_mobile_translation": "//alpha-cdn.wemall-dev.com/th/cmp/images/40x40.jpg?v=cff87fbf",
    "plain_note": "None",
    "plain_note_translation": ""
  },
  "repeat": 5
}
".</msg>
<status status="PASS" endtime="20160512 12:34:37.321" starttime="20160512 12:34:37.321"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:37.322" starttime="20160512 12:34:37.322"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${CAMP-V1-CREATE-FREEBIE-URI}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:37.449" starttime="20160512 12:34:37.323"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160512 12:34:37.450" level="INFO">${response} = {"message":"success","data":{"id":17202,"name_en":"","description_en":"","short_description_en":"","enable":true,"member":true,"repeat":5,"campaign":{"id":5709,"name_translation":"Robot Freebie EN","e...</msg>
<status status="PASS" endtime="20160512 12:34:37.450" starttime="20160512 12:34:37.450"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${CAMP-V1-LEVEL-DOMAIN}</arg>
<arg>${CAMP-PROTOCOL}</arg>
</arguments>
<msg timestamp="20160512 12:34:37.451" level="INFO">Host for next HTTP request set to 'alpha-apis-gateway.wemall-dev.com'</msg>
<msg timestamp="20160512 12:34:37.451" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20160512 12:34:37.452" starttime="20160512 12:34:37.451"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-type</arg>
<arg>application/json</arg>
</arguments>
<msg timestamp="20160512 12:34:37.452" level="INFO">Set request header "Content-type" to "application/json"</msg>
<status status="PASS" endtime="20160512 12:34:37.452" starttime="20160512 12:34:37.452"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>x-wm-accesstoken</arg>
<arg>${access-token}</arg>
</arguments>
<msg timestamp="20160512 12:34:37.453" level="INFO">Set request header "x-wm-accesstoken" to "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkbm0iOiJBZG1pbiBXZW1hbGwiLCJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzIxNzd9.fvz37TxK8BMK2Ojo2JDdQTpPn5g2RXy-ql1Syj_iy3mWEyHXNG36ypDUqYTsSLDw-JJQbEfsQXcUOMecyIsniDqp7N4yfzD5L71eJhlMn0532RqhGTYoqN3YiLLy-TpKfO0tfBgK5wMrvmsz-WcX0gSLovaJSAO_CV6Qfa2F0zw"</msg>
<status status="PASS" endtime="20160512 12:34:37.453" starttime="20160512 12:34:37.453"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>x-wm-refreshtoken</arg>
<arg>${refresh-token}</arg>
</arguments>
<msg timestamp="20160512 12:34:37.454" level="INFO">Set request header "x-wm-refreshtoken" to "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c3IiOiI0NSIsInR5cCI6Im1lcmMiLCJleHAiOjE0NjMwMzQ4Nzd9.Nfj7gFzo08d8JAw7hU7PF-3AeCWFPmKhv8j-_hqpWEPkxpLURH3DNIoc4M0aIAAcrTnsL8CTogiBh1lIZha5LKnE81Ak6kId-jRkvl56plv6UC5BXRFD249JwAcZhFw5ISwBvFOVjOmTro421HfJPSvRlHyfRTo-8bCrvV-KbGk"</msg>
<status status="PASS" endtime="20160512 12:34:37.455" starttime="20160512 12:34:37.454"></status>
</kw>
<kw name="Next Request Should Succeed" library="HttpLibrary.HTTP">
<doc>Fails the next request if it's status code is &gt;= 400. This is the</doc>
<status status="PASS" endtime="20160512 12:34:37.457" starttime="20160512 12:34:37.456"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${CAMP-V1-BUILD-FREEBIE-URI}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:45.963" starttime="20160512 12:34:37.458"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20160512 12:34:45.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20160512 12:34:45.965" starttime="20160512 12:34:45.964"></status>
</kw>
<msg timestamp="20160512 12:34:45.965" level="INFO">${response_camp} = {"message":"success","data":{"id":17202,"name_en":"","description_en":"","short_description_en":"","enable":true,"member":true,"repeat":5,"campaign":{"id":5709,"name_translation":"Robot Freebie EN","e...</msg>
<status status="PASS" endtime="20160512 12:34:45.965" starttime="20160512 12:34:36.859"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${response_camp}</arg>
<arg>/data/id</arg>
</arguments>
<assign>
<var>${prodmotion_id}</var>
</assign>
<msg timestamp="20160512 12:34:45.967" level="INFO">${prodmotion_id} = 17202</msg>
<status status="PASS" endtime="20160512 12:34:45.967" starttime="20160512 12:34:45.966"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${prodmotion_id}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:45.968" starttime="20160512 12:34:45.968"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${var_freebie_promotion_id}</arg>
<arg>${prodmotion_id}</arg>
</arguments>
<msg timestamp="20160512 12:34:45.994" level="INFO">${var_freebie_promotion_id} = 17202</msg>
<status status="PASS" endtime="20160512 12:34:45.995" starttime="20160512 12:34:45.969"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:45.995" starttime="20160512 12:34:36.788"></status>
</kw>
<kw name="Freebie Checkout - Add Main Product has Style 2 Qty To Cart And Success" library="keywords_checkout">
<kw name="Freebie Checkout - Login And Go To Level D Product Main" library="keywords_checkout">
<kw name="Go To" library="Selenium2Library">
<doc>Navigates the active browser instance to the provided URL.</doc>
<arguments>
<arg>${ITM_URL}</arg>
</arguments>
<msg timestamp="20160512 12:34:46.001" level="INFO">Opening url 'http://thor-www.itruemart-dev.com'</msg>
<status status="PASS" endtime="20160512 12:34:47.280" starttime="20160512 12:34:46.000"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${CHECKOUT_TIMEOUT}</arg>
<arg>30s</arg>
</arguments>
<msg timestamp="20160512 12:34:47.282" level="INFO">${CHECKOUT_TIMEOUT} = 30s</msg>
<status status="PASS" endtime="20160512 12:34:47.282" starttime="20160512 12:34:47.282"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20160512 12:34:50.285" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20160512 12:34:50.286" starttime="20160512 12:34:47.284"></status>
</kw>
<kw name="Freebie Checkout - Go To Level D Main Product" library="keywords_checkout">
<kw name="Go To" library="Selenium2Library">
<doc>Navigates the active browser instance to the provided URL.</doc>
<arguments>
<arg>${ITM_URL}/products/item-${var_freebie_main_level_d_pkey}.html</arg>
</arguments>
<msg timestamp="20160512 12:34:50.290" level="INFO">Opening url 'http://thor-www.itruemart-dev.com/products/item-2731265257113.html'</msg>
<status status="PASS" endtime="20160512 12:34:54.635" starttime="20160512 12:34:50.290"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:54.636" starttime="20160512 12:34:50.288"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:54.636" starttime="20160512 12:34:45.999"></status>
</kw>
<kw name="Freebie Checkout - Choose Style Option Main Product" library="keywords_checkout">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${XPATH_LEVEL_D.div_style_type}</arg>
<arg>30s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:54.825" starttime="20160512 12:34:54.638"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${var_freebie_main_level_d_style1}</arg>
</arguments>
<assign>
<var>${main_style}</var>
</assign>
<msg timestamp="20160512 12:34:54.828" level="INFO">${main_style} = 21238843494689</msg>
<status status="PASS" endtime="20160512 12:34:54.828" starttime="20160512 12:34:54.827"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${XPATH_LEVEL_D.btn_style_option_pkey}</arg>
<arg>^^style-option-pkey^^</arg>
<arg>${main_style}</arg>
</arguments>
<assign>
<var>${element_main_style}</var>
</assign>
<msg timestamp="20160512 12:34:54.830" level="INFO">${element_main_style} = //a[@data-style-option='21238843494689']</msg>
<status status="PASS" endtime="20160512 12:34:54.830" starttime="20160512 12:34:54.829"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${element_main_style}</arg>
<arg>30s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:54.864" starttime="20160512 12:34:54.831"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${element_main_style}</arg>
</arguments>
<msg timestamp="20160512 12:34:54.865" level="INFO">Clicking element '//a[@data-style-option='21238843494689']'.</msg>
<status status="PASS" endtime="20160512 12:34:54.922" starttime="20160512 12:34:54.865"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${LvD_LoadingImg}</arg>
<arg>30s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:55.901" starttime="20160512 12:34:54.922"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:55.901" starttime="20160512 12:34:54.637"></status>
</kw>
<kw name="Level D - Increase Product Quantity" library="keywords_leveld">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${XPATH_LEVEL_D.step_arrow_up}</arg>
<arg>${CHECKOUT_TIMEOUT}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:55.937" starttime="20160512 12:34:55.904"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${XPATH_LEVEL_D.step_arrow_up}</arg>
</arguments>
<msg timestamp="20160512 12:34:55.938" level="INFO">Clicking element '//span[@class='stepper-arrow up']'.</msg>
<status status="PASS" endtime="20160512 12:34:56.002" starttime="20160512 12:34:55.938"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${LvD_LoadingImg}</arg>
<arg>15</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:56.021" starttime="20160512 12:34:56.003"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:56.022" starttime="20160512 12:34:55.902"></status>
</kw>
<kw name="Level D - User Click Add To Cart Button" library="keywords_leveld">
<kw name="Wait Until Ajax Loading Is Not Visible" library="keywords_itruemart_common">
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${XPATH_COMMON.ajax_loading}</arg>
<arg>60s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:56.050" starttime="20160512 12:34:56.026"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:56.051" starttime="20160512 12:34:56.025"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${XPATH_LEVEL_D.btn_add_to_cart}</arg>
<arg>${CHECKOUT_TIMEOUT}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:56.086" starttime="20160512 12:34:56.051"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${XPATH_LEVEL_D.btn_add_to_cart}</arg>
</arguments>
<msg timestamp="20160512 12:34:56.087" level="INFO">Clicking element '//button[contains(@class, "product-addtocart")]'.</msg>
<status status="PASS" endtime="20160512 12:34:56.138" starttime="20160512 12:34:56.086"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:56.138" starttime="20160512 12:34:56.023"></status>
</kw>
<kw name="Display Full Cart" library="keywords_full_cart">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${XPATH_FULL_CART.div_full_cart}</arg>
<arg>${CHECKOUT_TIMEOUT}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:34:58.172" starttime="20160512 12:34:56.142"></status>
</kw>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${XPATH_FULL_CART.div_full_cart}</arg>
</arguments>
<msg timestamp="20160512 12:34:58.173" level="INFO">Verifying element '//div[@id="cart-popup"]' is visible.</msg>
<status status="PASS" endtime="20160512 12:34:58.187" starttime="20160512 12:34:58.173"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:58.188" starttime="20160512 12:34:56.140"></status>
</kw>
<status status="PASS" endtime="20160512 12:34:58.188" starttime="20160512 12:34:45.997"></status>
</kw>
<kw name="Full Cart - Display Normal Product First Item 2 Qty" library="keywords_full_cart">
<kw name="Full Cart - Display Normal Product First Item x Qty" library="keywords_full_cart">
<arguments>
<arg>2</arg>
</arguments>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${ROW_X_ITEM_X_TYPE}</arg>
<arg>^^type^^</arg>
<arg>normal</arg>
</arguments>
<assign>
<var>${row_element}</var>
</assign>
<msg timestamp="20160512 12:34:58.194" level="INFO">${row_element} = //div[@class="cart-box"]/div[@class="cart-title-list" and @data-type="normal"][^^position^^]</msg>
<status status="PASS" endtime="20160512 12:34:58.194" starttime="20160512 12:34:58.193"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${row_element}</arg>
<arg>^^position^^</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${row_element}</var>
</assign>
<msg timestamp="20160512 12:34:58.195" level="INFO">${row_element} = //div[@class="cart-box"]/div[@class="cart-title-list" and @data-type="normal"][1]</msg>
<status status="PASS" endtime="20160512 12:34:58.195" starttime="20160512 12:34:58.194"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${XPATH_FULL_CART.cbo_quantity}</arg>
</arguments>
<assign>
<var>${qty_element}</var>
</assign>
<msg timestamp="20160512 12:34:58.196" level="INFO">${qty_element} = //div[@class="left"]/div[@class="cart-box-no"]/select</msg>
<status status="PASS" endtime="20160512 12:34:58.196" starttime="20160512 12:34:58.195"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>option[@value="${quantity}" and @selected="selected"]</arg>
</arguments>
<assign>
<var>${val_qty_element}</var>
</assign>
<msg timestamp="20160512 12:34:58.197" level="INFO">${val_qty_element} = option[@value="2" and @selected="selected"]</msg>
<status status="PASS" endtime="20160512 12:34:58.197" starttime="20160512 12:34:58.197"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${row_element}${qty_element}</arg>
<arg>${CHECKOUT_TIMEOUT}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:01.392" starttime="20160512 12:34:58.198"></status>
</kw>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${row_element}${qty_element}/${val_qty_element}</arg>
</arguments>
<msg timestamp="20160512 12:35:01.394" level="INFO">Verifying element '//div[@class="cart-box"]/div[@class="cart-title-list" and @data-type="normal"][1]//div[@class="left"]/div[@class="cart-box-no"]/select/option[@value="2" and @selected="selected"]' is visible.</msg>
<status status="PASS" endtime="20160512 12:35:01.427" starttime="20160512 12:35:01.393"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:01.428" starttime="20160512 12:34:58.191"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:01.428" starttime="20160512 12:34:58.189"></status>
</kw>
<kw name="Full Cart - Display Free Product First Item 1 Qty" library="keywords_full_cart">
<kw name="Full Cart - Display Free Product First Item x Qty" library="keywords_full_cart">
<arguments>
<arg>1</arg>
</arguments>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${ROW_X_ITEM_X_TYPE}</arg>
<arg>^^type^^</arg>
<arg>freebie</arg>
</arguments>
<assign>
<var>${row_element}</var>
</assign>
<msg timestamp="20160512 12:35:01.433" level="INFO">${row_element} = //div[@class="cart-box"]/div[@class="cart-title-list" and @data-type="freebie"][^^position^^]</msg>
<status status="PASS" endtime="20160512 12:35:01.433" starttime="20160512 12:35:01.432"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${row_element}</arg>
<arg>^^position^^</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${row_element}</var>
</assign>
<msg timestamp="20160512 12:35:01.434" level="INFO">${row_element} = //div[@class="cart-box"]/div[@class="cart-title-list" and @data-type="freebie"][1]</msg>
<status status="PASS" endtime="20160512 12:35:01.434" starttime="20160512 12:35:01.433"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${XPATH_FULL_CART.lbl_quantity}</arg>
</arguments>
<assign>
<var>${qty_element}</var>
</assign>
<msg timestamp="20160512 12:35:01.436" level="INFO">${qty_element} = //div[@class="left"]/div[@class="cart-box-no"]</msg>
<status status="PASS" endtime="20160512 12:35:01.436" starttime="20160512 12:35:01.435"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>span[contains(text(),${quantity})]</arg>
</arguments>
<assign>
<var>${val_qty_element}</var>
</assign>
<msg timestamp="20160512 12:35:01.437" level="INFO">${val_qty_element} = span[contains(text(),1)]</msg>
<status status="PASS" endtime="20160512 12:35:01.437" starttime="20160512 12:35:01.437"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${row_element}${qty_element}</arg>
<arg>${CHECKOUT_TIMEOUT}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:01.473" starttime="20160512 12:35:01.438"></status>
</kw>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${row_element}${qty_element}/${val_qty_element}</arg>
</arguments>
<msg timestamp="20160512 12:35:01.474" level="INFO">Verifying element '//div[@class="cart-box"]/div[@class="cart-title-list" and @data-type="freebie"][1]//div[@class="left"]/div[@class="cart-box-no"]/span[contains(text(),1)]' is visible.</msg>
<status status="PASS" endtime="20160512 12:35:01.508" starttime="20160512 12:35:01.474"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:01.509" starttime="20160512 12:35:01.431"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:01.509" starttime="20160512 12:35:01.429"></status>
</kw>
<kw name="Full Cart - Display Camp Short Description" library="keywords_full_cart">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${XPATH_FULL_CART.camp_short_description}</arg>
<arg>${CHECKOUT_TIMEOUT}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:01.542" starttime="20160512 12:35:01.512"></status>
</kw>
<kw name="Element Should Be Visible" library="Selenium2Library">
<doc>Verifies that the element identified by `locator` is visible.</doc>
<arguments>
<arg>${XPATH_FULL_CART.camp_short_description}</arg>
</arguments>
<msg timestamp="20160512 12:35:01.545" level="INFO">Verifying element '//li[@data-id="camp_short_description"]' is visible.</msg>
<status status="PASS" endtime="20160512 12:35:01.574" starttime="20160512 12:35:01.544"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:01.574" starttime="20160512 12:35:01.510"></status>
</kw>
<kw name="User Click Next Process On Full Cart" library="keywords_full_cart">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${XPATH_FULL_CART.btn_next}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:01.608" starttime="20160512 12:35:01.577"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${XPATH_FULL_CART.btn_next}</arg>
</arguments>
<msg timestamp="20160512 12:35:01.610" level="INFO">Clicking element '//input[@id="cartlightbox-go-next"]'.</msg>
<status status="PASS" endtime="20160512 12:35:01.669" starttime="20160512 12:35:01.610"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:01.669" starttime="20160512 12:35:01.576"></status>
</kw>
<kw name="Checkout1 - Click Have Member Radio Button" library="Keywords_Checkout1">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout1_RadioMember}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:06.779" starttime="20160512 12:35:01.672"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout1_RadioMember}</arg>
</arguments>
<msg timestamp="20160512 12:35:06.781" level="INFO">Clicking element '//*[@id="user1"]'.</msg>
<status status="PASS" endtime="20160512 12:35:06.818" starttime="20160512 12:35:06.780"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:06.818" starttime="20160512 12:35:01.670"></status>
</kw>
<kw name="Checkout1 - Input Email" library="Keywords_Checkout1">
<arguments>
<arg>${username_login}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout1_InputEmail}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:06.878" starttime="20160512 12:35:06.822"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${Checkout1_InputEmail}</arg>
<arg>${Text_Email}</arg>
</arguments>
<msg timestamp="20160512 12:35:06.881" level="INFO">Typing text 'robotautomate@gmail.com' into text field '//*[@id="step1-username"]'</msg>
<status status="PASS" endtime="20160512 12:35:07.039" starttime="20160512 12:35:06.880"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:07.039" starttime="20160512 12:35:06.819"></status>
</kw>
<kw name="Checkout1 - Input Password" library="Keywords_Checkout1">
<arguments>
<arg>${password_login}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout1_InputPassword}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:07.120" starttime="20160512 12:35:07.043"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${Checkout1_InputPassword}</arg>
<arg>${Text_Password}</arg>
</arguments>
<msg timestamp="20160512 12:35:07.123" level="INFO">Typing text 'true1234' into text field '//*[@id="password"]'</msg>
<status status="PASS" endtime="20160512 12:35:07.246" starttime="20160512 12:35:07.122"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:07.246" starttime="20160512 12:35:07.040"></status>
</kw>
<kw name="Checkout1 - Click Next" library="Keywords_Checkout1">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout1_NextBtn}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:07.289" starttime="20160512 12:35:07.250"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout1_NextBtn}</arg>
</arguments>
<msg timestamp="20160512 12:35:07.291" level="INFO">Clicking element '//*[@id="btnNext"]'.</msg>
<status status="PASS" endtime="20160512 12:35:07.347" starttime="20160512 12:35:07.290"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:07.348" starttime="20160512 12:35:07.248"></status>
</kw>
<kw name="Checkout2 - Click Next Member" library="Keywords_Checkout2">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout2_NextBtn_Member}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:17.808" starttime="20160512 12:35:07.350"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout2_NextBtn_Member}</arg>
</arguments>
<msg timestamp="20160512 12:35:17.809" level="INFO">Clicking element '//*[@class="form-bot-address-active"]'.</msg>
<status status="PASS" endtime="20160512 12:35:17.853" starttime="20160512 12:35:17.809"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:17.853" starttime="20160512 12:35:07.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20160512 12:35:20.856" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20160512 12:35:20.857" starttime="20160512 12:35:17.854"></status>
</kw>
<kw name="Checkout3 - Apply CCW" library="Keywords_Checkout3">
<arguments>
<arg>TEST</arg>
<arg>5555555555554444</arg>
<arg>111</arg>
</arguments>
<kw name="Wait Until Element is ready and type" library="Keywords_Common">
<arguments>
<arg>${Checkout3_CCWName}</arg>
<arg>${Text_CCWName}</arg>
<arg>60</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:27.858" starttime="20160512 12:35:20.863"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:27.882" starttime="20160512 12:35:27.859"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="Selenium2Library">
<doc>Waits until element specified with `locator` is enabled.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:27.899" starttime="20160512 12:35:27.883"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${element}</arg>
<arg>${input_text}</arg>
</arguments>
<msg timestamp="20160512 12:35:27.900" level="INFO">Typing text 'TEST' into text field '//*[@id="ccw-info-name"]'</msg>
<status status="PASS" endtime="20160512 12:35:28.010" starttime="20160512 12:35:27.900"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:28.010" starttime="20160512 12:35:20.861"></status>
</kw>
<kw name="Wait Until Element is ready and type" library="Keywords_Common">
<arguments>
<arg>${Checkout3_CCWCardNo}</arg>
<arg>${Text_CCWCardNo}</arg>
<arg>60</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:28.039" starttime="20160512 12:35:28.014"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:28.075" starttime="20160512 12:35:28.040"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="Selenium2Library">
<doc>Waits until element specified with `locator` is enabled.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:28.091" starttime="20160512 12:35:28.076"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${element}</arg>
<arg>${input_text}</arg>
</arguments>
<msg timestamp="20160512 12:35:28.092" level="INFO">Typing text '5555555555554444' into text field '//*[@id="ccw-info-no"]'</msg>
<status status="PASS" endtime="20160512 12:35:28.180" starttime="20160512 12:35:28.092"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:28.180" starttime="20160512 12:35:28.011"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout3_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:28.251" starttime="20160512 12:35:28.182"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWMonth}</arg>
</arguments>
<msg timestamp="20160512 12:35:28.253" level="INFO">Clicking element '//*[@id="month"]'.</msg>
<status status="PASS" endtime="20160512 12:35:28.323" starttime="20160512 12:35:28.252"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout3_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:29.921" starttime="20160512 12:35:28.324"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWMonth}/option[contains(text(),'11')]</arg>
</arguments>
<msg timestamp="20160512 12:35:29.922" level="INFO">Clicking element '//*[@id="month"]/option[contains(text(),'11')]'.</msg>
<status status="PASS" endtime="20160512 12:35:29.982" starttime="20160512 12:35:29.922"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWYear}</arg>
</arguments>
<msg timestamp="20160512 12:35:29.984" level="INFO">Clicking element '//*[@id="year"]'.</msg>
<status status="PASS" endtime="20160512 12:35:30.321" starttime="20160512 12:35:29.983"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout3_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:30.620" starttime="20160512 12:35:30.323"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWYear}/option[contains(text(),'2022')]</arg>
</arguments>
<msg timestamp="20160512 12:35:30.622" level="INFO">Clicking element '//*[@id="year"]/option[contains(text(),'2022')]'.</msg>
<status status="PASS" endtime="20160512 12:35:30.683" starttime="20160512 12:35:30.621"></status>
</kw>
<kw name="Wait Until Element is ready and type" library="Keywords_Common">
<arguments>
<arg>${Checkout3_CCWCCV}</arg>
<arg>${Text_CCWCCV}</arg>
<arg>60</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:30.974" starttime="20160512 12:35:30.686"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:30.998" starttime="20160512 12:35:30.975"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="Selenium2Library">
<doc>Waits until element specified with `locator` is enabled.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:31.017" starttime="20160512 12:35:30.999"></status>
</kw>
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${element}</arg>
<arg>${input_text}</arg>
</arguments>
<msg timestamp="20160512 12:35:31.018" level="INFO">Typing text '111' into text field '//*[@id="channel-ccw"]/div[4]/div[4]/div/input'</msg>
<status status="PASS" endtime="20160512 12:35:31.338" starttime="20160512 12:35:31.017"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:31.338" starttime="20160512 12:35:30.684"></status>
</kw>
<kw name="Reattempt to Input CCW Name" library="Keywords_Checkout3">
<arguments>
<arg>${Text_CCWName}</arg>
</arguments>
<kw type="for" name="${INDEX} IN RANGE [ 0 | 10 ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWName}</arg>
<arg>${Text_CWName}</arg>
</arguments>
<msg timestamp="20160512 12:35:31.342" level="INFO">Typing text 'TEST' into text field '//*[@id="ccw-info-name"]'</msg>
<status status="PASS" endtime="20160512 12:35:31.436" starttime="20160512 12:35:31.342"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout3_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:31.474" starttime="20160512 12:35:31.437"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${Checkout3_CCWCCV}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:31.475" starttime="20160512 12:35:31.475"></status>
</kw>
<kw name="Get Value" library="Selenium2Library">
<doc>Returns the value attribute of element identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWName}</arg>
</arguments>
<assign>
<var>${verify_Name}</var>
</assign>
<msg timestamp="20160512 12:35:31.494" level="INFO">${verify_Name} = TEST</msg>
<status status="PASS" endtime="20160512 12:35:31.494" starttime="20160512 12:35:31.476"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${verify_Name}</arg>
<arg>Get Text</arg>
<arg>${Checkout3_CCWName}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:31.495" starttime="20160512 12:35:31.495"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Empty</arg>
<arg>${verify_Name}</arg>
</arguments>
<assign>
<var>${empty_present}</var>
</assign>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${verify_Name}</arg>
</arguments>
<msg timestamp="20160512 12:35:31.498" level="INFO">Length is 4</msg>
<msg timestamp="20160512 12:35:31.498" level="FAIL">'TEST' should be empty.</msg>
<status status="FAIL" endtime="20160512 12:35:31.498" starttime="20160512 12:35:31.497"></status>
</kw>
<msg timestamp="20160512 12:35:31.498" level="INFO">${empty_present} = False</msg>
<status status="PASS" endtime="20160512 12:35:31.498" starttime="20160512 12:35:31.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${empty_present}==${False}</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20160512 12:35:31.524" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20160512 12:35:31.525" starttime="20160512 12:35:31.524"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:31.525" starttime="20160512 12:35:31.499"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:31.525" starttime="20160512 12:35:31.340"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:31.525" starttime="20160512 12:35:31.340"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:31.525" starttime="20160512 12:35:31.339"></status>
</kw>
<kw name="Reattempt to Input CCW Card No" library="Keywords_Checkout3">
<arguments>
<arg>${Text_CCWCardNo}</arg>
</arguments>
<kw type="for" name="${INDEX} IN RANGE [ 0 | 10 ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWCardNo}</arg>
<arg>${Text_CWCardNo}</arg>
</arguments>
<msg timestamp="20160512 12:35:31.529" level="INFO">Typing text '5555555555554444' into text field '//*[@id="ccw-info-no"]'</msg>
<status status="PASS" endtime="20160512 12:35:31.597" starttime="20160512 12:35:31.529"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout3_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:31.637" starttime="20160512 12:35:31.598"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${Checkout3_CCWName}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:31.639" starttime="20160512 12:35:31.638"></status>
</kw>
<kw name="Get Value" library="Selenium2Library">
<doc>Returns the value attribute of element identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWCardNo}</arg>
</arguments>
<assign>
<var>${verify_CardNo}</var>
</assign>
<msg timestamp="20160512 12:35:31.662" level="INFO">${verify_CardNo} = 5555555555554444</msg>
<status status="PASS" endtime="20160512 12:35:31.662" starttime="20160512 12:35:31.640"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${verify_CardNo}</arg>
<arg>Get Text</arg>
<arg>${Checkout3_CCWCardNo}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:31.663" starttime="20160512 12:35:31.663"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Empty</arg>
<arg>${verify_CardNo}</arg>
</arguments>
<assign>
<var>${empty_present}</var>
</assign>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${verify_CardNo}</arg>
</arguments>
<msg timestamp="20160512 12:35:31.665" level="INFO">Length is 16</msg>
<msg timestamp="20160512 12:35:31.665" level="FAIL">'5555555555554444' should be empty.</msg>
<status status="FAIL" endtime="20160512 12:35:31.666" starttime="20160512 12:35:31.665"></status>
</kw>
<msg timestamp="20160512 12:35:31.666" level="INFO">${empty_present} = False</msg>
<status status="PASS" endtime="20160512 12:35:31.666" starttime="20160512 12:35:31.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${empty_present}==${False}</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20160512 12:35:31.692" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20160512 12:35:31.692" starttime="20160512 12:35:31.692"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:31.692" starttime="20160512 12:35:31.666"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:31.692" starttime="20160512 12:35:31.528"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:31.692" starttime="20160512 12:35:31.527"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:31.693" starttime="20160512 12:35:31.526"></status>
</kw>
<kw name="Reattempt to Input CCW CCV" library="Keywords_Checkout3">
<arguments>
<arg>${Text_CCWCCV}</arg>
</arguments>
<kw type="for" name="${INDEX} IN RANGE [ 0 | 10 ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Input Text" library="Selenium2Library">
<doc>Types the given `text` into text field identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWCCV}</arg>
<arg>${Text_CWCCV}</arg>
</arguments>
<msg timestamp="20160512 12:35:31.695" level="INFO">Typing text '111' into text field '//*[@id="channel-ccw"]/div[4]/div[4]/div/input'</msg>
<status status="PASS" endtime="20160512 12:35:31.790" starttime="20160512 12:35:31.695"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout3_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:32.687" starttime="20160512 12:35:31.791"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${Checkout3_CCWName}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:32.688" starttime="20160512 12:35:32.688"></status>
</kw>
<kw name="Get Value" library="Selenium2Library">
<doc>Returns the value attribute of element identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_CCWCCV}</arg>
</arguments>
<assign>
<var>${verify_CWCCV}</var>
</assign>
<msg timestamp="20160512 12:35:32.706" level="INFO">${verify_CWCCV} = 111</msg>
<status status="PASS" endtime="20160512 12:35:32.706" starttime="20160512 12:35:32.689"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${verify_CWCCV}</arg>
<arg>Get Text</arg>
<arg>${Checkout3_CCWCCV}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:32.708" starttime="20160512 12:35:32.707"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Empty</arg>
<arg>${verify_CWCCV}</arg>
</arguments>
<assign>
<var>${empty_present}</var>
</assign>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${verify_CWCCV}</arg>
</arguments>
<msg timestamp="20160512 12:35:32.710" level="INFO">Length is 3</msg>
<msg timestamp="20160512 12:35:32.710" level="FAIL">'111' should be empty.</msg>
<status status="FAIL" endtime="20160512 12:35:32.710" starttime="20160512 12:35:32.710"></status>
</kw>
<msg timestamp="20160512 12:35:32.711" level="INFO">${empty_present} = False</msg>
<status status="PASS" endtime="20160512 12:35:32.711" starttime="20160512 12:35:32.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${empty_present}==${False}</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20160512 12:35:32.734" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20160512 12:35:32.734" starttime="20160512 12:35:32.734"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:32.734" starttime="20160512 12:35:32.711"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:32.734" starttime="20160512 12:35:31.694"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:32.734" starttime="20160512 12:35:31.694"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:32.734" starttime="20160512 12:35:31.693"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:32.734" starttime="20160512 12:35:20.858"></status>
</kw>
<kw name="Checkout3 - Click Submit" library="Keywords_Checkout3">
<kw name="Wait Until Element is ready and click" library="Keywords_Common">
<arguments>
<arg>${Submit_Checkout3}</arg>
<arg>60</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="Selenium2Library">
<doc>Waits until element specified with `locator` appears on current page.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:32.755" starttime="20160512 12:35:32.738"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:32.790" starttime="20160512 12:35:32.756"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="Selenium2Library">
<doc>Waits until element specified with `locator` is enabled.</doc>
<arguments>
<arg>${element}</arg>
<arg>${sec_timeout}</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:32.806" starttime="20160512 12:35:32.791"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${element}</arg>
</arguments>
<msg timestamp="20160512 12:35:32.807" level="INFO">Clicking element '//*[@id="step3-submit"]'.</msg>
<status status="PASS" endtime="20160512 12:35:32.875" starttime="20160512 12:35:32.807"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:32.875" starttime="20160512 12:35:32.737"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout3_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:35.120" starttime="20160512 12:35:32.876"></status>
</kw>
<status status="PASS" endtime="20160512 12:35:35.121" starttime="20160512 12:35:32.736"></status>
</kw>
<kw name="Checkout3 - Confirm CCW" library="Keywords_Checkout3">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is visible.</doc>
<arguments>
<arg>${Checkout3_ConfirmBtn}</arg>
<arg>60s</arg>
</arguments>
<status status="PASS" endtime="20160512 12:35:35.392" starttime="20160512 12:35:35.126"></status>
</kw>
<kw name="Click Element" library="Selenium2Library">
<doc>Click element identified by `locator`.</doc>
<arguments>
<arg>${Checkout3_ConfirmBtn}</arg>
</arguments>
<msg timestamp="20160512 12:35:35.393" level="INFO">Clicking element '//*[@id="confirm-payment-submit"]'.</msg>
<status status="PASS" endtime="20160512 12:35:35.438" starttime="20160512 12:35:35.393"></status>
</kw>
<kw name="Wait Until Element Is Not Visible" library="Selenium2Library">
<doc>Waits until element specified with `locator` is not visible.</doc>
<arguments>
<arg>${Checkout3_LoadingImg}</arg>
<arg>20s</arg>
</arguments>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20160512 12:35:44.755" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20160512 12:35:44.755" starttime="20160512 12:35:44.469"></status>
</kw>
<msg timestamp="20160512 12:35:44.755" level="FAIL">StaleElementReferenceException: Message: stale element reference: element is not attached to the page document
  (Session info: chrome=50.0.2661.94)
  (Driver info: chromedriver=2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef961),platform=Mac OS X 10.11.4 x86_64)
</msg>
<status status="FAIL" endtime="20160512 12:35:44.756" starttime="20160512 12:35:35.440"></status>
</kw>
<status status="FAIL" endtime="20160512 12:35:44.756" starttime="20160512 12:35:35.122"></status>
</kw>
<kw type="teardown" name="Close All Browsers" library="Selenium2Library">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" endtime="20160512 12:35:44.841" starttime="20160512 12:35:44.757"></status>
</kw>
<tags>
<tag>eieifeel</tag>
<tag>Testing2</tag>
</tags>
<status status="FAIL" endtime="20160512 12:35:44.841" critical="yes" starttime="20160512 12:34:04.018">StaleElementReferenceException: Message: stale element reference: element is not attached to the page document
  (Session info: chrome=50.0.2661.94)
  (Driver info: chromedriver=2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef961),platform=Mac OS X 10.11.4 x86_64)
</status>
</test>
<status status="FAIL" endtime="20160512 12:35:44.845" starttime="20160512 12:32:23.805"></status>
</suite>
<statistics>
<total>
<stat fail="3" pass="0">Critical Tests</stat>
<stat fail="3" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">eieifeel</stat>
<stat fail="3" pass="0">Testing2</stat>
</tag>
<suite>
<stat fail="3" id="s1" name="Item Status Failed Delivery" pass="0">Item Status Failed Delivery</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20160512 12:32:24.455" level="ERROR">Error in file '/Users/Benz/Documents/Ascend Work/robot_itruemart_thai/Keyword/Portal/iTrueMart/ThankYou_page/Keywords_ThankYouPage.robot': Test library '/Users/Benz/Documents/Ascend Work/robot_itruemart_thai/Keyword/Python_Library/message_library.py' does not exist.</msg>
<msg timestamp="20160512 12:32:25.185" level="ERROR">Error in file '/Users/Benz/Documents/Ascend Work/robot_itruemart_thai/Resource/Config/thor/env_config.robot': Setting variable '${DOWNLOAD-PATH}' failed: Environment variable '%{USERPROFILE}' not found.</msg>
</errors>
</robot>
